{"version":3,"sources":["components/content/profile/profile.module.css","components/content/profile/post/post.module.css","components/content/profile/post/img/someava.jpg","components/content/profile/statusBlock.module.css","components/content/profile/post/post.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/content/profile/statusBlock.tsx","components/content/profile/profileCompWithContainer.tsx"],"names":["module","exports","Post","wallPosts","map","msg","className","stl","post","key","id","avatar","src","Avatar","alt","message","dateIndexer","date","time","messageText","likesCounter","likesCount","_objectWithoutProperties","source","excluded","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","StatusCompFunc","colorTheme","errOnStatusLoading","errOnStatusUpdate","isMe","isLoading","statusField","loader","props","useState","statusEdit","setStatusEdit","fieldBalanceLength","setFieldBalanceLength","statusFieldValue","setStatusFieldValue","previousStatus","setPreviousStatus","useEffect","windowDNMC","textInput","themes","setThemes","mWindow_N","inputN","mWindow_M","inputM","mWindow_D","inputD","mWindow_E","inputE","rejectStatus","window","onkeyup","myStatusWrapper","statusWrapper","onClick","e","undefined","statusError","modalBackground","data-name","onMouseDown","getAttribute","modalWindow","autoFocus","maxLength","statusTextArea","value","onChange","placeholder","twoBTNs","BTNChangeSaver","updateStatusThunk","BTNChangeReject","Profile","state","actions","delayFlag","profileMedia","errOnGettingProfile","errOnProfileLoading","isFollowed","onFollowingErr","userId","profileData","writeMode","setWriteMode","feedBacker","setFeedBacker","setTimeout","sendingStatCleaner","MSGToUserSended","errAtMSGSending","getContacts","obj","logos","result","faceBookLogo","gitHubLogo","instagramLogo","mainLinkLogo","twitterLogo","vkLogo","websiteLogo","youTubeLogo","facebook","github","instagram","mainLink","twitter","vk","website","youtube","push","title","el","uuidv4","href","contacts","profilePics","validator","values","errors","text","forbiddenIdArr","userIdlacking","setUserIdlacking","match","useRouteMatch","some","params","attributes","modalCloser","writeWindow","profileDnmc","miniHeadWrapper","followBTN","BTNs","to","closeBTN","textAreaWrapper","initialValues","validate","onSubmit","setSubmitting","sendMsgToTalkerThunk","handleChange","handleSubmit","isSubmitting","name","talkTextarea","as","type","disabled","cn","loaderDiv","delay","picsNLoaders","auth_LDR_GIF","fontClrsDnmc","Houston","profileGetter","profile","panorama","panoramaPic","panoramaSRC","profileWrapper","profileDetails","profilePicNBTN","photos","large","myAvatarLarge","ava_LDR_GIF","updateMyAvatarThunk","files","fileInput","myId","htmlFor","fileChooser","errOnAvatarUpdate","BTN_ERR_DNMC","noAvaError","writeMessage","BTN_LDR_GIF","profileInfo","nameWrapper","profileInfoDnmc","fullName","isFollowing","followThunkToggler","followBTNContainer","followBTNText","onFollowingErrBTN","tryAgainBTN","followBTNLoader","statusBlock","status_LDR_GIF","contactsH2","lookingForAJobDescription","jobSeeker","lookingForAJob","aboutMe","writePost","writePostDnmc","inputBox","addPost","ProfileFuncContainer","history","useHistory","useSelector","getSmartProfileMediaData","getSmartPicsNLoaders","getMyId","getProfilePics","profileACs","getProfileACs","getColorTheme","themesDelayFlag","getThemesDelayFlag","comparativeId","profileState","dispatch","useDispatch","profileActions","finalPost","Date","data","getDate","slice","getMonth","getFullYear","getHours","getMinutes","addPostAC","getProfileThunk","getProfileThUnkAC","updateStatusThunkAC","image","updateMyAvatarThunkAC","followThunkTogglerAC","sendMsgToTalkerThunkAC","afterSendMSGStatCleaner","panoramaPicSrc","profileN","profileInfoN","BTNsN","BTN_ERR_N","writePostN","fontsClr_N","profileM","profileInfoM","BTNsM","BTN_ERR_M","writePostM","fontsClr_M","profileD","profileInfoD","BTNsD","BTN_ERR_D","writePostD","fontsClr_D","profileE","profileInfoE","BTNsE","BTN_ERR_E","writePostE","fontsClr_E"],"mappings":"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","file":"static/js/5.058fc1b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Houston\":\"profile_Houston__hm2IH\",\"profile\":\"profile_profile__ReKQa\",\"delay\":\"profile_delay__2a4zF\",\"profileN\":\"profile_profileN__3zzoA\",\"profileM\":\"profile_profileM__ugnQc\",\"profileD\":\"profile_profileD__2XSvn\",\"profileE\":\"profile_profileE__10qv3\",\"loaderDiv\":\"profile_loaderDiv__3rwPA\",\"loader\":\"profile_loader__19wyE\",\"fontsClr_N\":\"profile_fontsClr_N__n-TMl\",\"fontsClr_M\":\"profile_fontsClr_M__1Bzc2\",\"fontsClr_D\":\"profile_fontsClr_D__1YGz7\",\"fontsClr_E\":\"profile_fontsClr_E__13oJU\",\"panorama\":\"profile_panorama__3K75T\",\"panoramaPic\":\"profile_panoramaPic__2yiEi\",\"panoramaGIF\":\"profile_panoramaGIF__3cOMZ\",\"profileWrapper\":\"profile_profileWrapper__3vKwF\",\"profileDetails\":\"profile_profileDetails__3-UNl\",\"profilePicNBTN\":\"profile_profilePicNBTN__1fpx_\",\"fileInput\":\"profile_fileInput__2-oE0\",\"fileChooser\":\"profile_fileChooser__3Txil\",\"writeMessage\":\"profile_writeMessage__ljAoy\",\"avaErr\":\"profile_avaErr__3qIxS\",\"noAvaError\":\"profile_noAvaError__2DB2p\",\"BTNsN\":\"profile_BTNsN__28pq0\",\"BTNsM\":\"profile_BTNsM__kbj0a\",\"BTNsD\":\"profile_BTNsD__2jqg7\",\"BTNsE\":\"profile_BTNsE__3opZI\",\"BTN_ERR_N\":\"profile_BTN_ERR_N__NIESw\",\"BTN_ERR_M\":\"profile_BTN_ERR_M__2e_Xp\",\"BTN_ERR_D\":\"profile_BTN_ERR_D__1qZXh\",\"BTN_ERR_E\":\"profile_BTN_ERR_E__2HML8\",\"jobSeeker\":\"profile_jobSeeker__2qn8Q\",\"profileInfo\":\"profile_profileInfo__1nJjA\",\"contactsH2\":\"profile_contactsH2__16uPM\",\"nameWrapper\":\"profile_nameWrapper__1CZjk\",\"profileInfoN\":\"profile_profileInfoN__2tH7-\",\"profileInfoM\":\"profile_profileInfoM__SUPYu\",\"profileInfoD\":\"profile_profileInfoD__1ee-i\",\"profileInfoE\":\"profile_profileInfoE__xkwFN\",\"followBTN\":\"profile_followBTN__30QbI\",\"onFollowingErrBTN\":\"profile_onFollowingErrBTN__2kle1\",\"tryAgainBTN\":\"profile_tryAgainBTN__1v88H\",\"followBTNContainer\":\"profile_followBTNContainer__2vXbs\",\"followBTNText\":\"profile_followBTNText__3ek65\",\"followBTNLoader\":\"profile_followBTNLoader__3tFJD\",\"statusBlock\":\"profile_statusBlock__30Pwt\",\"writePost\":\"profile_writePost__VfdTg\",\"writePostN\":\"profile_writePostN__1xhSS\",\"writePostM\":\"profile_writePostM__d-Vu3\",\"writePostD\":\"profile_writePostD__Gjc2F\",\"writePostE\":\"profile_writePostE__2rVdv\",\"inputBox\":\"profile_inputBox__1_dNo\",\"inputN\":\"profile_inputN__3kvtO\",\"inputM\":\"profile_inputM__33fbM\",\"inputD\":\"profile_inputD__R7kCQ\",\"inputE\":\"profile_inputE__23Tqq\",\"modalBackground\":\"profile_modalBackground__3Smm3\",\"writeWindow\":\"profile_writeWindow__2Bhdx\",\"miniHeadWrapper\":\"profile_miniHeadWrapper__3yEwO\",\"closeBTN\":\"profile_closeBTN__2r241\",\"textAreaWrapper\":\"profile_textAreaWrapper__2Q762\",\"talkTextarea\":\"profile_talkTextarea__28_FT\",\"feedBacker\":\"profile_feedBacker__1zCLP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__2j7CT\",\"avatar\":\"post_avatar__2mqN8\",\"message\":\"post_message__2XmQM\",\"dateIndexer\":\"post_dateIndexer__2FsMy\",\"messageText\":\"post_messageText__2owes\",\"likesCounter\":\"post_likesCounter__3HuyL\"};","module.exports = __webpack_public_path__ + \"static/media/someava.44b6b16c.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"first\":\"statusBlock_first__2an4S\",\"second\":\"statusBlock_second__3BNAa\",\"modalBackground\":\"statusBlock_modalBackground__3jwpD\",\"modalWindow\":\"statusBlock_modalWindow__2kg2X\",\"mWindow_N\":\"statusBlock_mWindow_N__332rN\",\"mWindow_M\":\"statusBlock_mWindow_M__1G02W\",\"mWindow_D\":\"statusBlock_mWindow_D__3pkMZ\",\"mWindow_E\":\"statusBlock_mWindow_E__1L0Ff\",\"statusTextArea\":\"statusBlock_statusTextArea__Vv9xK\",\"inputN\":\"statusBlock_inputN__3YqAs\",\"inputM\":\"statusBlock_inputM__YHahE\",\"inputD\":\"statusBlock_inputD__2T-4y\",\"inputE\":\"statusBlock_inputE__ejeV0\",\"twoBTNs\":\"statusBlock_twoBTNs__2pbnL\",\"BTNChangeSaver\":\"statusBlock_BTNChangeSaver__2k2Kv\",\"BTNChangeReject\":\"statusBlock_BTNChangeReject__SqDlR\",\"myStatusWrapper\":\"statusBlock_myStatusWrapper__22BiU\",\"statusWrapper\":\"statusBlock_statusWrapper__25lgy\",\"statusField\":\"statusBlock_statusField__2FgUj\",\"statusError\":\"statusBlock_statusError__2CnTG\"};","import React from 'react';\r\nimport stl from './post.module.css';\r\nimport Avatar from './img/someava.jpg'\r\n\r\ntype PostProps_Type = { wallPosts: { id: number, likesCount: number, date: string, time: string, message: string }[] }\r\n\r\nlet Post: React.FC<PostProps_Type> = ({ wallPosts }) => {\r\n    return <>\r\n        {wallPosts.map(msg =>\r\n            <div className={stl.post} key={msg.id}>\r\n                <div className={stl.avatar}> <img src={Avatar} alt=\"err\" /> </div>\r\n                <div className={stl.message} >\r\n                    <p className={stl.dateIndexer}>WAS WRITTEN {msg.date} AT {msg.time}</p>\r\n                    <p className={stl.messageText}>{msg.message}</p>\r\n                    <p className={stl.likesCounter}> {msg.likesCount}  ♥ Likes</p>\r\n                </div>\r\n            </div>)}\r\n    </>\r\n};\r\n\r\nexport default Post;\r\n\r\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { useEffect, useState } from \"react\";\r\nimport stl from \"./statusBlock.module.css\";\r\n\r\n\r\ntype StatusProps = {\r\n  colorTheme: string, errOnStatusLoading: string, errOnStatusUpdate: string, isLoading: boolean, isMe: boolean, loader: string, statusField: string, updateStatusThunk: (text: string) => void,\r\n}\r\n\r\nexport let StatusCompFunc: React.FC<StatusProps> = ({ colorTheme, errOnStatusLoading, errOnStatusUpdate, isLoading, isMe, loader, statusField, ...props }) => {\r\n\r\n  const [statusEdit, setStatusEdit] = useState(false);\r\n  const fieldMaxLength = 300;\r\n  const [fieldBalanceLength, setFieldBalanceLength] = useState(0);\r\n  const [statusFieldValue, setStatusFieldValue] = useState('')\r\n  const [previousStatus, setPreviousStatus] = useState('')\r\n\r\n  useEffect(() => {\r\n    setStatusFieldValue(statusField)\r\n    setPreviousStatus(statusField)\r\n    statusField !== null && setFieldBalanceLength(fieldMaxLength - statusField.length)\r\n  }, [statusField])\r\n\r\n  let [themes, setThemes] = useState({ windowDNMC: '', textInput: '' })\r\n\r\n  useEffect(() => {\r\n    if (colorTheme === 'NIGHT') setThemes({ ...themes, windowDNMC: stl.mWindow_N, textInput: stl.inputN })\r\n    else if (colorTheme === 'MORNING') setThemes({ ...themes, windowDNMC: stl.mWindow_M, textInput: stl.inputM })\r\n    else if (colorTheme === 'DAY') setThemes({ ...themes, windowDNMC: stl.mWindow_D, textInput: stl.inputD })\r\n    else if (colorTheme === 'EVENING') setThemes({ ...themes, windowDNMC: stl.mWindow_E, textInput: stl.inputE })\r\n  }, [colorTheme])\r\n\r\n  let statusChangeListener = ({ target }: any) => { let { value } = target; setFieldBalanceLength(fieldMaxLength - value.length); setStatusFieldValue(value); };\r\n  let confirmStatus = () => { props.updateStatusThunk(statusFieldValue); setStatusFieldValue(statusField); setStatusEdit(false); };\r\n  let rejectStatus = () => { setStatusFieldValue(previousStatus); setFieldBalanceLength(fieldMaxLength - previousStatus.length); setStatusEdit(false); };\r\n\r\n  window.onkeyup = ({ key }: any) => { statusEdit && key === \"Escape\" && rejectStatus() };\r\n\r\n  let modalCloser = ({ target }: React.MouseEvent<HTMLDivElement>) => {\r\n    let el = target as HTMLInputElement; el.getAttribute('data-name') === 'modalBackground' && setStatusEdit(false)\r\n  }\r\n\r\n\r\n  return <>\r\n    <div className={isMe ? stl.myStatusWrapper : stl.statusWrapper} onClick={isMe ? (e: React.MouseEvent) => { setStatusEdit(true) } : undefined}>\r\n      <p className={`${stl.statusField} ${errOnStatusUpdate || errOnStatusLoading && stl.statusError}`}>\r\n        {errOnStatusLoading ?\r\n          `${errOnStatusLoading}  error!` : errOnStatusUpdate ?\r\n            errOnStatusUpdate : statusField ?\r\n              statusField : isMe ?\r\n                'Set your status here' : null\r\n        }\r\n      </p>\r\n    </div>\r\n    { statusEdit && <div className={`${stl.modalBackground}`} data-name='modalBackground'\r\n      onMouseDown={modalCloser}>\r\n      <div className={`${stl.modalWindow}  ${themes.windowDNMC}`}>\r\n        <textarea autoFocus={true}\r\n          maxLength={fieldMaxLength}\r\n          className={`${stl.statusTextArea} ${themes.textInput}`}\r\n          value={statusFieldValue}\r\n          onChange={statusChangeListener}\r\n          placeholder={'write your mind here'}\r\n        />\r\n        <div> {fieldBalanceLength} symbols left</div>\r\n        <div className={stl.twoBTNs} >\r\n          <button className={stl.BTNChangeSaver} onClick={() => { confirmStatus() }}> Apply changes</button>\r\n          <button className={stl.BTNChangeReject} onClick={rejectStatus}> Reject changes </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    }\r\n  </>\r\n};\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink, useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { getMyId, getProfileACs, getProfilePics, getSmartProfileMediaData, getSmartPicsNLoaders, getColorTheme, getThemesDelayFlag } from \"../../../redux/selectors\";\r\nimport { Formik, Field } from 'formik';\r\nimport stl from './profile.module.css';\r\nimport Post from './post/post';\r\nimport { StatusCompFunc } from \"./statusBlock\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { InitialProfileState_Type, profileACs_Type, ProfilePicturesTypes } from \"../../../redux/profileReducer\";\r\nimport { ProfileThemes_Type } from '../../../redux/backGroundSetter'\r\nimport { HistoryHook_Type, MatchHook_Type } from '../../RouterHooksTypes'\r\nimport cn from 'classnames/bind';\r\n\r\n\r\ntype Themes_Type = {\r\n  profileDnmc: string,\r\n  panoramaSRC: string\r\n  profileInfoDnmc: string,\r\n  BTNs: string,\r\n  BTN_ERR_DNMC: string,\r\n  writePostDnmc: string,\r\n  textInput: string,\r\n  fontClrsDnmc: string;\r\n}\r\ntype ProfileState_Type = {\r\n  profileMedia: InitialProfileState_Type\r\n  picsNLoaders: ProfileThemes_Type\r\n  myId: number | null\r\n  profilePics: ProfilePicturesTypes\r\n  profileACs: profileACs_Type\r\n  colorTheme: string\r\n}\r\ntype ProfileActions_Type = {\r\n  addPost: (finalPost: string) => void\r\n  getProfileThunk: (userId: null | number, isMe: boolean) => void\r\n  updateStatusThunk: (text: string) => void\r\n  updateMyAvatarThunk: (image: string) => void\r\n  followThunkToggler: (userId: null | number, isFollowed: null | boolean) => void\r\n  sendMsgToTalkerThunk: (userId: null | number, message: string) => void\r\n  sendingStatCleaner: () => void\r\n  profileGetter: () => void\r\n}\r\n\r\nlet ProfileFuncContainer = () => {\r\n\r\n  let history: HistoryHook_Type = useHistory();\r\n  let match: MatchHook_Type | any = useRouteMatch(); //потому что ТС, постоянно пишет object possibly undefined\r\n\r\n\r\n  let profileMedia = useSelector(getSmartProfileMediaData);\r\n  let picsNLoaders = useSelector(getSmartPicsNLoaders);\r\n  let myId = useSelector(getMyId);\r\n  let profilePics = useSelector(getProfilePics);\r\n  let profileACs = useSelector(getProfileACs);\r\n  let colorTheme = useSelector(getColorTheme);\r\n  let themesDelayFlag = useSelector(getThemesDelayFlag)\r\n\r\n  let comparativeId = +match?.params?.userId;\r\n\r\n  let profileState = { profileMedia, picsNLoaders, myId, profilePics, profileACs, colorTheme }\r\n\r\n  let dispatch = useDispatch();\r\n  let profileActions: ProfileActions_Type = {\r\n    addPost: (finalPost: string) => {\r\n      let date = new Date();\r\n      let data = `${(\"0\" + date.getDate()).slice(-2)}.${(\"0\" + (date.getMonth() + 1)).slice(-2)}.${(date.getFullYear() - 2000)}`;\r\n      let time = `${(\"0\" + date.getHours()).slice(-2)}:${(\"0\" + date.getMinutes()).slice(-2)}`;\r\n      dispatch(profileACs.addPostAC(finalPost, data, time));\r\n    },\r\n    getProfileThunk: (userId: null | number, isMe: boolean) => dispatch(profileACs.getProfileThUnkAC(userId, isMe)),\r\n    updateStatusThunk: (text: string) => dispatch(profileACs.updateStatusThunkAC(text)),\r\n    updateMyAvatarThunk: (image: string) => dispatch(profileACs.updateMyAvatarThunkAC(image)),\r\n    followThunkToggler: (userId: null | number, isFollowed: null | boolean) => dispatch(profileACs.followThunkTogglerAC(userId, isFollowed)),\r\n    sendMsgToTalkerThunk: (userId: null | number, message: string) => dispatch(profileACs.sendMsgToTalkerThunkAC(userId, message)),\r\n    sendingStatCleaner: () => dispatch(profileACs.afterSendMSGStatCleaner()),\r\n    profileGetter: () => {\r\n      if (myId === comparativeId || !comparativeId) {\r\n        profileActions.getProfileThunk(myId, true); history.push(`/profile/${myId}`);\r\n      } else if (+comparativeId && +comparativeId !== myId) { profileActions.getProfileThunk(comparativeId, false); }\r\n    }\r\n\r\n  }\r\n  let panoramaPicSrc = picsNLoaders.panoramaPic;\r\n\r\n  useEffect(() => { profileActions.profileGetter(); }, [myId, comparativeId]);\r\n\r\n  let [themes, setThemes] = useState<Themes_Type>({ profileDnmc: '', panoramaSRC: '', profileInfoDnmc: '', BTNs: '', BTN_ERR_DNMC: '', writePostDnmc: '', textInput: '', fontClrsDnmc: '' })\r\n  useEffect(() => {\r\n    switch (colorTheme) {\r\n      case 'NIGHT': return setThemes({ ...themes, profileDnmc: stl.profileN, panoramaSRC: panoramaPicSrc, profileInfoDnmc: stl.profileInfoN, BTNs: stl.BTNsN, BTN_ERR_DNMC: stl.BTN_ERR_N, writePostDnmc: stl.writePostN, textInput: stl.inputN, fontClrsDnmc: stl.fontsClr_N })\r\n      case 'MORNING': return setThemes({ ...themes, profileDnmc: stl.profileM, panoramaSRC: panoramaPicSrc, profileInfoDnmc: stl.profileInfoM, BTNs: stl.BTNsM, BTN_ERR_DNMC: stl.BTN_ERR_M, writePostDnmc: stl.writePostM, textInput: stl.inputM, fontClrsDnmc: stl.fontsClr_M })\r\n      case 'DAY': return setThemes({ ...themes, profileDnmc: stl.profileD, panoramaSRC: panoramaPicSrc, profileInfoDnmc: stl.profileInfoD, BTNs: stl.BTNsD, BTN_ERR_DNMC: stl.BTN_ERR_D, writePostDnmc: stl.writePostD, textInput: stl.inputD, fontClrsDnmc: stl.fontsClr_D })\r\n      case 'EVENING': return setThemes({ ...themes, profileDnmc: stl.profileE, panoramaSRC: panoramaPicSrc, profileInfoDnmc: stl.profileInfoE, BTNs: stl.BTNsE, BTN_ERR_DNMC: stl.BTN_ERR_E, writePostDnmc: stl.writePostE, textInput: stl.inputE, fontClrsDnmc: stl.fontsClr_E })\r\n    }\r\n  }, [colorTheme]);\r\n\r\n\r\n  return themes.profileDnmc ? <Profile\r\n    state={profileState}\r\n    colorTheme={colorTheme}\r\n    themes={themes}\r\n    actions={profileActions}\r\n    delayFlag={themesDelayFlag}\r\n  /> : null;\r\n};\r\n\r\n\r\ntype Profile_Types = {\r\n  actions: ProfileActions_Type\r\n  state: ProfileState_Type\r\n  themes: Themes_Type\r\n  colorTheme: string\r\n  delayFlag: boolean\r\n}\r\n\r\nconst Profile: React.FC<Profile_Types> = ({ state, actions, themes, colorTheme, delayFlag }) => {\r\n  type Error_Type = { text?: string };\r\n\r\n  let { errOnProfileLoading: errOnGettingProfile, errOnStatusLoading, isFollowed, onFollowingErr, isLoading } = state.profileMedia;\r\n  let { userId } = state.profileMedia.profileData\r\n\r\n\r\n  let [writeMode, setWriteMode] = useState(false)\r\n  let [feedBacker, setFeedBacker] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => { setFeedBacker(false); actions.sendingStatCleaner() }, 2000)\r\n  }, [state.profileMedia.MSGToUserSended || state.profileMedia.errAtMSGSending])\r\n\r\n\r\n\r\n  const getContacts = (obj: any, logos: any) => {\r\n    const result = [];\r\n    let { faceBookLogo, gitHubLogo, instagramLogo, mainLinkLogo, twitterLogo, vkLogo, websiteLogo, youTubeLogo } = logos;\r\n    let { facebook, github, instagram, mainLink, twitter, vk, website, youtube } = obj;\r\n    result.push({ title: faceBookLogo, value: facebook }, { title: gitHubLogo, value: github }, { title: instagramLogo, value: instagram },\r\n      { title: mainLinkLogo, value: mainLink }, { title: twitterLogo, value: twitter }, { title: vkLogo, value: vk },\r\n      { title: websiteLogo, value: website }, { title: youTubeLogo, value: youtube })\r\n\r\n    for (let key in obj) { if (!obj[key]) { obj[key] = 'nope' } }\r\n    return (result.map((el) => <li key={uuidv4()}> <img src={el.title} alt=\"err\" />  {el.value === 'nope' ? <p>{el.value}</p> :\r\n      <a href={el.value}>{el.value}</a>}</li>))\r\n  };\r\n  state.profileMedia.profileData.contacts && getContacts(state.profileMedia.profileData.contacts, state.profilePics)\r\n\r\n  let photoSaver = (e: any) => { actions.updateMyAvatarThunk(e.target.files[0]) };\r\n\r\n  let modalCloser = (e: any) => { e.target.attributes['data-name'] && e.target.attributes['data-name'].value === 'modalBackground' && setWriteMode(false) }\r\n\r\n  let feedBackCloser = () => { setFeedBacker(false) }\r\n\r\n  type Value_Type = { text: string }\r\n  let validator = (values: Value_Type) => { let errors: Error_Type = {}; if (!values.text) { errors.text = 'Write something..' } return errors }\r\n\r\n  let submitterForMSGS = (values: Value_Type, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n    actions.sendMsgToTalkerThunk(userId, values.text); setFeedBacker(true); setWriteMode(false); setSubmitting(false);\r\n  }\r\n  let submitterForWall = (values: Value_Type, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n    actions.addPost(values.text); values.text = ''; setSubmitting(false);\r\n  }\r\n\r\n\r\n  let forbiddenIdArr = [1, 17, 21, 23, 31, 1031];\r\n  let [userIdlacking, setUserIdlacking] = useState<boolean>(false)\r\n  let match: MatchHook_Type | any = useRouteMatch();\r\n  useEffect(() => {\r\n    if (forbiddenIdArr.some(el => el === +match.params.userId) || match.params.userId >= 31 && match.params.userId <= 1031) {\r\n      setUserIdlacking(true)\r\n    } else setUserIdlacking(false)\r\n  }, [match.params.userId])\r\n\r\n  return <>\r\n    {writeMode &&\r\n      <div data-name='modalBackground' className={stl.modalBackground} onClick={e => { modalCloser(e) }}>\r\n        <div className={`${stl.writeWindow} ${themes.profileDnmc}`}>\r\n          <div className={stl.miniHeadWrapper}>\r\n            {/* <h2 className={`${stl.userName} ${props.themes.userNameDnmc}`}>{props.state.profileMedia.profileData.fullName}</h2> */}\r\n            <NavLink className={`${stl.followBTN} ${themes.BTNs}`} to={`/dialogs/${userId}`}\r\n            > Go to chat </NavLink>\r\n            <button className={`${stl.closeBTN} ${stl.followBTN} ${themes.BTNs}`}\r\n              onClick={() => { setWriteMode(false) }}\r\n            >X</button>\r\n          </div>\r\n          <div className={stl.textAreaWrapper}>\r\n\r\n            <Formik initialValues={{ text: '' }} validate={validator} onSubmit={submitterForMSGS}>\r\n              {({ values, errors, handleChange, handleSubmit, isSubmitting }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <Field name=\"text\" className={stl.talkTextarea} as='textarea'\r\n                    onChange={handleChange} value={values.text} placeholder={errors.text} />\r\n                  <button type=\"submit\" disabled={isSubmitting} className={`${stl.followBTN} ${themes.BTNs}`}\r\n                  > Send Msg </button>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    }\r\n\r\n    {feedBacker &&\r\n      <div className={stl.feedBacker}>\r\n        <button onClick={feedBackCloser}> X</button>\r\n        <p>{!state.profileMedia.MSGToUserSended && !state.profileMedia.errAtMSGSending && 'Sending message...' ||\r\n          state.profileMedia.MSGToUserSended && `${state.profileMedia.MSGToUserSended}` ||\r\n          state.profileMedia.errAtMSGSending && `${state.profileMedia.errAtMSGSending} Error! Failed to deliver!`}\r\n        </p>\r\n      </div>\r\n    }\r\n\r\n    {!userIdlacking && isLoading && <div className={cn(stl.loaderDiv, themes.profileDnmc, delayFlag && stl.delay)}>\r\n      <img className={stl.loader} src={state.picsNLoaders.auth_LDR_GIF} alt=\"Err\" />\r\n      <p className={themes.fontClrsDnmc}>Loading profile...</p>\r\n    </div>}\r\n    {userIdlacking && <div className={`${stl.Houston} ${themes.profileDnmc}`}>\r\n      <h2>Houston, we've got a problem...</h2>\r\n      <h2>We have no user with such Id</h2>\r\n    </div>}\r\n    {!userIdlacking && errOnGettingProfile && !isLoading &&\r\n      <div className={`${stl.Houston} ${themes.profileDnmc}`}>\r\n        <h2>Houston, we've got a problem...</h2>\r\n        <h2>{errOnGettingProfile} error!</h2>\r\n        <button\r\n          className={`${stl.followBTN} ${themes.BTNs}`}\r\n          onClick={() => { actions.profileGetter() }}\r\n        >Try again</button>\r\n      </div>\r\n    }\r\n    {!userIdlacking && userId && !errOnGettingProfile && !isLoading &&\r\n      <div className={`${stl.profile} ${themes.profileDnmc}`}>\r\n        <div className={stl.panorama}>\r\n          <img\r\n            className={stl.panoramaPic}\r\n            src={themes.panoramaSRC} alt=\"Err\"\r\n          />\r\n        </div>\r\n        <div className={stl.profileWrapper}>\r\n          <div className={stl.profileDetails}>\r\n            <div className={stl.profilePicNBTN}>\r\n              <div>\r\n                <img src={!userId ? state.picsNLoaders.ava_LDR_GIF : state.profileMedia.profileData.photos.large ||\r\n                  state.profileMedia.myAvatarLarge} alt=\"Err\" />\r\n              </div>\r\n              <input disabled={!userId} type=\"file\" name=\"image\" id='file' onChange={photoSaver} className={stl.fileInput} />\r\n              {!userId ?\r\n                <label htmlFor=\"file\" className={`${stl.fileChooser} ${themes.BTNs}`}\r\n                ><img src={state.picsNLoaders.BTN_LDR_GIF} alt=\"err\" /></label> :\r\n                state.myId === userId ?\r\n                  <label htmlFor=\"file\" className={`${stl.fileChooser} ${themes.BTNs}`}\r\n                  >\r\n                    <>\r\n                      {state.profileMedia.errOnAvatarUpdate ?\r\n                        <div className={themes.BTN_ERR_DNMC}> {state.profileMedia.errOnAvatarUpdate} </div> :\r\n                        <div className={stl.noAvaError}>\r\n                          <div> Choose your new picture</div>\r\n                          <div> Choose your <s>destiny!</s></div></div>\r\n                      }\r\n                    </>\r\n                  </label> :\r\n                  <button className={`${stl.writeMessage} ${themes.BTNs}`}\r\n                    disabled={writeMode} onClick={() => setWriteMode(true)}\r\n                  >Write Message</button>\r\n              }\r\n            </div>\r\n            <div className={stl.profileInfo}>\r\n              <div className={cn(stl.nameWrapper, themes.profileInfoDnmc, delayFlag && stl.delay)}>\r\n                <h2> {state.profileMedia.profileData.fullName} {state.myId === userId && '(it\\'s you)'}</h2>\r\n                {state.myId !== userId &&\r\n                  <button\r\n                    className={cn(stl.followBTN, onFollowingErr ? themes.BTN_ERR_DNMC : themes.BTNs)}\r\n                    disabled={state.profileMedia.isFollowing}\r\n                    onClick={() => actions.followThunkToggler(userId, isFollowed)}\r\n                  >\r\n                    <div className={stl.followBTNContainer}>\r\n                      <div className={stl.followBTNText}>\r\n                        {onFollowingErr ?                   // есть ошибка при выполнении (un)Follow?\r\n                          <>\r\n                            <p className={stl.onFollowingErrBTN}>{onFollowingErr}</p>\r\n                            <p className={stl.tryAgainBTN}>Try again!</p>\r\n                          </> :                  // если нет ошибки, то : \r\n                          state.profileMedia.isFollowed ? 'Unfollow' : 'Follow'} </div>\r\n                      <div className={stl.followBTNLoader}> {state.profileMedia.isFollowing && <img src={state.picsNLoaders.BTN_LDR_GIF} alt=\"Err\" />} </div>\r\n                    </div>\r\n                  </button>\r\n                }\r\n              </div>\r\n              <div className={stl.statusBlock}>\r\n                <StatusCompFunc\r\n                  isMe={state.myId === userId}\r\n                  isLoading={!userId}\r\n                  loader={state.picsNLoaders.status_LDR_GIF}\r\n                  colorTheme={colorTheme}\r\n                  statusField={state.profileMedia.statusField}\r\n                  errOnStatusLoading={errOnStatusLoading}\r\n                  updateStatusThunk={actions.updateStatusThunk}\r\n                  errOnStatusUpdate={state.profileMedia.errOnStatusUpdate}\r\n                />\r\n              </div>\r\n              <p className={stl.contactsH2}>Contacts:</p>\r\n              <ul>\r\n                {state.profileMedia.profileData.contacts &&\r\n                  getContacts(state.profileMedia.profileData.contacts, state.profilePics)\r\n                }\r\n              </ul>\r\n              {state.profileMedia.profileData.lookingForAJobDescription &&\r\n                <div className={stl.jobSeeker}>\r\n                  <p>Professional skills:</p>\r\n                  <p>Skill stack: {state.profileMedia.profileData.lookingForAJobDescription}</p>\r\n                  <p>Applicant: {state.profileMedia.profileData.lookingForAJob ? 'yup' : 'nope'}</p>\r\n                  <p>About me: {state.profileMedia.profileData.aboutMe ? state.profileMedia.profileData.aboutMe : 'nope'}</p>\r\n                </div>}\r\n            </div>\r\n          </div>\r\n\r\n          {state.myId === userId && <div>\r\n            <div className={cn(stl.writePost, themes.writePostDnmc, delayFlag && stl.delay)}>\r\n              <h2>My posts</h2>\r\n              <div className={stl.inputBox}>\r\n                <Formik initialValues={{ text: '' }} validate={validator} onSubmit={submitterForWall}>\r\n                  {({ values, errors, handleChange, handleSubmit, isSubmitting }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                      <textarea name=\"text\" className={stl.talkTextarea}\r\n                        onChange={handleChange} value={values.text} placeholder={errors.text} />\r\n                      <button type=\"submit\" disabled={isSubmitting} className={`${themes.BTNs}`}> Send Msg </button>\r\n                    </form>\r\n                  )}\r\n                </Formik>\r\n\r\n              </div>\r\n            </div>\r\n            <Post wallPosts={state.profileMedia.wallPosts} />\r\n          </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    }\r\n\r\n\r\n  </>\r\n};\r\n\r\nexport default ProfileFuncContainer;\r\n\r\n\r\n"],"sourceRoot":""}