{"version":3,"sources":["components/content/dialogs/dialogs.module.css","components/content/dialogs/dialogs.tsx"],"names":["module","exports","Dialogs","myId","state","themes","userIdInURL","actions","loaders","delayFlag","dialogArea","useRef","bufferBlock","useState","undefined","dialogId","setDialogId","msgsMapDone","setMsgsMapDone","dialogAreaHeight","setDialogAreaHeight","userNameInHeader","setUserNameInHeader","counterSetter","useSelector","getDialogsACs_compDialogs","prevMSGsCounterSetter","dispatch","useDispatch","oldMsgLazyLoader","addPrevMessagesThunk","prevMSGsCounter","useEffect","scrollToDown","prevMsgsIsLoading","current","scrollTo","scrollHeight","user","dialogsList","find","el","id","userName","submitter","values","setSubmitting","sendMessageToUserThunk","text","uuidv4","scrollIntoView","behavior","servInfo","setServInfo","key","indexEl","setIndexEl","newServInfo","modalCloser","window","onkeyup","btnShow","setBtnShow","wasClicked","setWasClicked","prevHeight","setPrevHeight","dialogChanging","setDialogChanging","prevBTNisShown","setPrevBTNisShown","hasScroll","certainDialog","items","length","clientHeight","resizeTimeout","addEventListener","setTimeout","certainDialogIsLoading","className","cn","stl","dialogsPage","dialogDnmc","delay","dialogListAndArea","dialogList","constrictor","firstScroller","allDialogsIsLoading","dialogListLoaderWrapper","dialogListLoader","src","halfCircle_GIF","alt","interSector_GIF","errNegotiatorsListGet","errorBlock","errNegotiatorsListPIC","errBTN","sendBTNDnmc","onClick","getMyNegotiatorsListThunk","map","i","talkerBlock","talkerBlockTheme","avaWrapper","to","photos","large","defaultAvatar","msgCounter","talkerBlockA","hasNewMessages","newMessagesCount","userNameWrapper","userId","getTalkWithUserThunk","userCompCleaner","activeClassName","activeLink","dialogsAreaAndSender","editWrapper","nameInHeaderDnmc","dialogAreaBackgroundNSecondScroll","ref","onScroll","scrollTop","totalCount","scrollControler","onContextMenu","e","preventDefault","noDialogsList","oldMsgsLoader","prevMSGLDR_GIF","errAtGettingPrevMsgs","prevBTNLdrBasic","errBTNDnmc","BTNPassive","addPrevBTNShown","addPrevBTNHidden","certainLDRWrapper","certainLDR_GIF","errCertainDialogGet","msg","msgs","senderId","messageBlockMe","msgMeDnmc","messageBlockUser","msgUserDnmc","sendndigInProgress","some","actionKey","arr","msgId","flag","wasError","errInSendingArr","isMyMsg","deleteMsg","deleteMessageThunk","markAsSpam","setSpamMessagesThunk","sendMsg","closer","onRightClickListener","messageBody","body","msgStatWrapper","forDeletingMsgsArr","ldrAndErr","msgLoaderGIF","onError","errAtDeletingMsgsArr","messageId","errorMarker","messageBlockTimeMe","messageBlockTimeUser","error","addedAt","substring","checkMark","viewed","msgSeenFlagPIC","msgDeliveredFlagPIC","ModalMenu","index","msgEl","sender","scrollToDownBtnHidden","scrollToDownBtn","scrollToPrevHeightBTN","arrowDownPIC","senderWrapper","initialValues","validate","errors","onSubmit","handleChange","handleSubmit","isSubmitting","name","onChange","value","placeholder","as","txtAreaField","textAreaDnmc","disabled","onKeyDown","keyCode","shiftKey","keyCodeChecker","sendBTNWrapper","sendBTN","React","memo","contextMenu","contMenuMyMsg","contMenuFriendMsg","contextMenuUpper","repeatNSpam","spamMarker","mesgBody","msgDeleter","DialogFuncContainer","match","useRouteMatch","dialogsInfo","getSmartDialogsReducer","getMyId","themesDelayFlag","getThemesDelayFlag","colorTheme","getColorTheme","dialogACs","getSmartDialogsLoaders","dialogActions","getMyNegotiatorsListThunkAC","getTalkWithUserThunkAC","sendMessageToUserThunkAC","talkedBeforeThunk","talkedBeforeThunkAC","setSelectedMessages","setSelectedMessagesAC","setSpamMessagesThunkAC","deleteMessageThunkAC","msgCount","pageNumber","addPrevMessagesThunkAC","dialogCompCleaner","params","setThemes","dialogN","dialogListN","followBTN_ERR_N","talkerBlockN","activeLinkN","talkerBlockA_N","myMsgN","userMsgN","dialogAreaN","nameInHeaderN","textareaN","sendBTN_N","dialogM","dialogListM","followBTN_ERR_M","talkerBlockM","activeLinkM","talkerBlockA_M","myMsgM","userMsgM","dialogAreaM","nameInHeaderM","textareaM","sendBTN_M","dialogD","dialogListD","followBTN_ERR_D","talkerBlockD","activeLinkD","talkerBlockA_D","myMsgD","userMsgD","dialogAreaD","nameInHeaderD","textareaD","sendBTN_D","dialogE","dialogListE","followBTN_ERR_E","talkerBlockE","activeLinkE","talkerBlockA_E","myMsgE","userMsgE","dialogAreaE","nameInHeaderE","textareaE","sendBTN_E"],"mappings":"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","file":"static/js/8.03aef26d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsPage\":\"dialogs_dialogsPage__3YAZJ\",\"delay\":\"dialogs_delay__2zjW6\",\"dialogN\":\"dialogs_dialogN__1UpQ-\",\"dialogM\":\"dialogs_dialogM__2cCcT\",\"dialogD\":\"dialogs_dialogD__1QRoD\",\"dialogE\":\"dialogs_dialogE__mwge9\",\"dialogListAndArea\":\"dialogs_dialogListAndArea__3-G4A\",\"dialogList\":\"dialogs_dialogList__3bTiT\",\"constrictor\":\"dialogs_constrictor__3Dl9i\",\"dialogListN\":\"dialogs_dialogListN__yL3OR\",\"dialogAreaN\":\"dialogs_dialogAreaN__1j6Oo\",\"dialogListM\":\"dialogs_dialogListM__oHsMB\",\"dialogAreaM\":\"dialogs_dialogAreaM__3YjcV\",\"dialogListD\":\"dialogs_dialogListD__2ysoi\",\"dialogAreaD\":\"dialogs_dialogAreaD__1uMpf\",\"dialogListE\":\"dialogs_dialogListE__3cB4V\",\"dialogAreaE\":\"dialogs_dialogAreaE__2IgcG\",\"dialogListLoaderWrapper\":\"dialogs_dialogListLoaderWrapper__2iq_B\",\"dialogListLoader\":\"dialogs_dialogListLoader__31ffY\",\"errorBlock\":\"dialogs_errorBlock__1Eykk\",\"errBTN\":\"dialogs_errBTN__N11aO\",\"talkerBlock\":\"dialogs_talkerBlock__1Qa6V\",\"talkerBlockN\":\"dialogs_talkerBlockN__J1xXe\",\"talkerBlockM\":\"dialogs_talkerBlockM__3b8pq\",\"talkerBlockD\":\"dialogs_talkerBlockD__1Uyfb\",\"talkerBlockE\":\"dialogs_talkerBlockE__3uF8Z\",\"talkerBlockA_N\":\"dialogs_talkerBlockA_N__2T8On\",\"activeLinkN\":\"dialogs_activeLinkN__3g2xy\",\"talkerBlockA_M\":\"dialogs_talkerBlockA_M__2IfcX\",\"activeLinkM\":\"dialogs_activeLinkM__2fJIO\",\"talkerBlockA_D\":\"dialogs_talkerBlockA_D__p36Bg\",\"activeLinkD\":\"dialogs_activeLinkD__3plu3\",\"talkerBlockA_E\":\"dialogs_talkerBlockA_E__17xes\",\"activeLinkE\":\"dialogs_activeLinkE__3CCQc\",\"avaWrapper\":\"dialogs_avaWrapper__51sTQ\",\"msgCounter\":\"dialogs_msgCounter__1_9a5\",\"userNameWrapper\":\"dialogs_userNameWrapper__3DMuE\",\"dialogsAreaAndSender\":\"dialogs_dialogsAreaAndSender__1oGXR\",\"editWrapper\":\"dialogs_editWrapper__-ZhzR\",\"nameInHeaderN\":\"dialogs_nameInHeaderN__1ZSMm\",\"nameInHeaderM\":\"dialogs_nameInHeaderM__3641Y\",\"nameInHeaderD\":\"dialogs_nameInHeaderD__1WMhC\",\"nameInHeaderE\":\"dialogs_nameInHeaderE__1f2nr\",\"dialogArea\":\"dialogs_dialogArea__1QaQa\",\"textareaN\":\"dialogs_textareaN__CXHTE\",\"textareaM\":\"dialogs_textareaM__5X7T9\",\"textareaD\":\"dialogs_textareaD__glP3q\",\"textareaE\":\"dialogs_textareaE__3iwp-\",\"noDialogsList\":\"dialogs_noDialogsList__2c7iM\",\"certainLDRWrapper\":\"dialogs_certainLDRWrapper__YNRCm\",\"oldMsgsLoader\":\"dialogs_oldMsgsLoader__2yP5i\",\"prevBTNLdrBasic\":\"dialogs_prevBTNLdrBasic__3LqKv\",\"BTNPassive\":\"dialogs_BTNPassive__2iIM6\",\"addPrevBTNHidden\":\"dialogs_addPrevBTNHidden__1V_nf\",\"addPrevBTNShown\":\"dialogs_addPrevBTNShown__1_oKb\",\"followBTN_ERR_N\":\"dialogs_followBTN_ERR_N__wBN0i\",\"followBTN_ERR_M\":\"dialogs_followBTN_ERR_M__182DN\",\"followBTN_ERR_D\":\"dialogs_followBTN_ERR_D__12-xJ\",\"followBTN_ERR_E\":\"dialogs_followBTN_ERR_E__3ocQb\",\"msgStatWrapper\":\"dialogs_msgStatWrapper__35Qbh\",\"messageBlockMe\":\"dialogs_messageBlockMe__3zEYb\",\"messageBlockUser\":\"dialogs_messageBlockUser__2iYny\",\"ldrAndErr\":\"dialogs_ldrAndErr__2ivjY\",\"checkMark\":\"dialogs_checkMark__39FI7\",\"errorMarker\":\"dialogs_errorMarker__20sOq\",\"contextMenu\":\"dialogs_contextMenu__1eoog\",\"contMenuMyMsg\":\"dialogs_contMenuMyMsg__2QoHH\",\"contMenuFriendMsg\":\"dialogs_contMenuFriendMsg__Kbhwe\",\"contextMenuUpper\":\"dialogs_contextMenuUpper__2X-w5\",\"repeatNSpam\":\"dialogs_repeatNSpam__3OfLF\",\"deleteMsg\":\"dialogs_deleteMsg__RJUFD\",\"myMsgN\":\"dialogs_myMsgN__2VDF8\",\"myMsgM\":\"dialogs_myMsgM__2w5Lm\",\"myMsgD\":\"dialogs_myMsgD__2IZG1\",\"myMsgE\":\"dialogs_myMsgE__2CkfD\",\"userMsgN\":\"dialogs_userMsgN__3FtLX\",\"userMsgM\":\"dialogs_userMsgM__B9Hu2\",\"userMsgD\":\"dialogs_userMsgD__20hnj\",\"userMsgE\":\"dialogs_userMsgE__1pDLK\",\"messageBody\":\"dialogs_messageBody__3sGlQ\",\"messageBlockTimeMe\":\"dialogs_messageBlockTimeMe__1uOtn\",\"messageBlockTimeUser\":\"dialogs_messageBlockTimeUser__1d8pV\",\"sender\":\"dialogs_sender__37EWV\",\"scrollToDownBtnHidden\":\"dialogs_scrollToDownBtnHidden__oLoUY\",\"scrollToPrevHeightBTN\":\"dialogs_scrollToPrevHeightBTN__2ok6I\",\"scrollToDownBtn\":\"dialogs_scrollToDownBtn__18N3n\",\"txtAreaField\":\"dialogs_txtAreaField__35xdZ\",\"sendBTNWrapper\":\"dialogs_sendBTNWrapper__3CWeL\",\"sendBTN\":\"dialogs_sendBTN__1ZFHA\",\"sendBTN_N\":\"dialogs_sendBTN_N__32gC9\",\"sendBTN_M\":\"dialogs_sendBTN_M__2-pzB\",\"sendBTN_D\":\"dialogs_sendBTN_D__1_Wu9\",\"sendBTN_E\":\"dialogs_sendBTN_E__38Fww\"};","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink, useRouteMatch } from 'react-router-dom';\r\nimport { Field, Formik } from 'formik';\r\nimport stl from './dialogs.module.css';\r\nimport {\r\n  getColorTheme, getDialogsACs_compDialogs,\r\n  getMyId, getSmartDialogsReducer, getThemesDelayFlag\r\n} from \"../../../redux/selectors\";\r\nimport { InitialDialogsState_Type } from '../../../redux/dialogsReducer';\r\nimport { DialoguesThemes_Type } from '../../../redux/backGroundSetter';\r\nimport { getSmartDialogsLoaders } from '../../../redux/selectors';\r\nimport { MatchHook_Type } from \"../../RouterHooksTypes\";\r\nimport { MessageData_Type } from \"../../../redux/app\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport cn from 'classnames/bind';\r\n\r\n\r\ntype DialogsActions_Types = {\r\n  getMyNegotiatorsListThunk: () => void\r\n  getTalkWithUserThunk: (userId: number) => void\r\n  sendMessageToUserThunk: (userId: number, msg: string, actionKey: string, userName: string, senderId: number) => void\r\n  talkedBeforeThunk: (userId: number) => void\r\n  setSelectedMessages: (messageId: string) => void\r\n  setSpamMessagesThunk: (messageId: string, index: number) => void\r\n  deleteMessageThunk: (messageId: string, index: number) => void\r\n  addPrevMessagesThunk: (dialogId: number, msgCount: number, pageNumber: number) => void\r\n  userCompCleaner: () => void,\r\n}\r\n\r\ntype Themes_Type = {\r\n  activeLink: string, dialogAreaBackgroundNSecondScroll: string, dialogDnmc: string, firstScroller: string, errBTNDnmc: string, msgMeDnmc: string, msgUserDnmc: string, sendBTNDnmc: string, talkerBlockA: string, nameInHeaderDnmc: string, talkerBlockTheme: string, textAreaDnmc: string\r\n}\r\n\r\nlet DialogFuncContainer = () => {\r\n  let match: MatchHook_Type = useRouteMatch();\r\n  let dialogsInfo = useSelector(getSmartDialogsReducer);\r\n  let myId = useSelector(getMyId);\r\n  let themesDelayFlag = useSelector(getThemesDelayFlag);\r\n  let colorTheme = useSelector(getColorTheme);\r\n  let dialogACs = useSelector(getDialogsACs_compDialogs);\r\n  let loaders = useSelector(getSmartDialogsLoaders)\r\n\r\n\r\n\r\n  let dispatch = useDispatch();\r\n  let dialogActions: DialogsActions_Types = {\r\n    getMyNegotiatorsListThunk: () => dispatch(dialogACs.getMyNegotiatorsListThunkAC()),\r\n    getTalkWithUserThunk: (userId: number) => dispatch(dialogACs.getTalkWithUserThunkAC(userId)),\r\n    sendMessageToUserThunk: (userId: number, msg: string, actionKey: string, userName: string, senderId: number) =>\r\n      dispatch(dialogACs.sendMessageToUserThunkAC(userId, msg, actionKey, userName, senderId)),\r\n    talkedBeforeThunk: (userId: number) => dispatch(dialogACs.talkedBeforeThunkAC(userId)),\r\n    setSelectedMessages: (messageId: string) => dispatch(dialogACs.setSelectedMessagesAC(messageId)),\r\n    setSpamMessagesThunk: (messageId: string, index: number) => dispatch(dialogACs.setSpamMessagesThunkAC(messageId, index)),\r\n    deleteMessageThunk: (messageId: string, index: number) => dispatch(dialogACs.deleteMessageThunkAC(messageId, index)),\r\n    addPrevMessagesThunk: (dialogId: number, msgCount: number, pageNumber: number) =>\r\n      dispatch(dialogACs.addPrevMessagesThunkAC(dialogId, msgCount, pageNumber)),\r\n    userCompCleaner: () => dispatch(dialogACs.dialogCompCleaner())\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    match?.params?.userId ? dialogActions.talkedBeforeThunk(+match.params.userId) : dialogActions.getMyNegotiatorsListThunk();\r\n\r\n    return () => dialogActions.userCompCleaner()\r\n  }, [])\r\n\r\n  let [themes, setThemes] = useState<Themes_Type>({ dialogDnmc: '', firstScroller: '', errBTNDnmc: '', talkerBlockTheme: '', activeLink: '', talkerBlockA: '', msgMeDnmc: '', msgUserDnmc: '', dialogAreaBackgroundNSecondScroll: '', nameInHeaderDnmc: '', textAreaDnmc: '', sendBTNDnmc: '', })\r\n  useEffect(() => {\r\n    switch (colorTheme) {\r\n      case 'NIGHT': return setThemes({\r\n        ...themes, dialogDnmc: stl.dialogN, firstScroller: stl.dialogListN, errBTNDnmc: stl.followBTN_ERR_N, talkerBlockTheme: stl.talkerBlockN, activeLink: stl.activeLinkN, talkerBlockA: stl.talkerBlockA_N, msgMeDnmc: stl.myMsgN,\r\n        msgUserDnmc: stl.userMsgN, dialogAreaBackgroundNSecondScroll: stl.dialogAreaN, nameInHeaderDnmc: stl.nameInHeaderN, textAreaDnmc: stl.textareaN, sendBTNDnmc: stl.sendBTN_N,\r\n      });\r\n      case 'MORNING': return setThemes({\r\n        ...themes, dialogDnmc: stl.dialogM, firstScroller: stl.dialogListM, errBTNDnmc: stl.followBTN_ERR_M, talkerBlockTheme: stl.talkerBlockM, activeLink: stl.activeLinkM, talkerBlockA: stl.talkerBlockA_M, msgMeDnmc: stl.myMsgM,\r\n        msgUserDnmc: stl.userMsgM, dialogAreaBackgroundNSecondScroll: stl.dialogAreaM, nameInHeaderDnmc: stl.nameInHeaderM, textAreaDnmc: stl.textareaM, sendBTNDnmc: stl.sendBTN_M,\r\n      });\r\n      case 'DAY': return setThemes({\r\n        ...themes, dialogDnmc: stl.dialogD, firstScroller: stl.dialogListD, errBTNDnmc: stl.followBTN_ERR_D, talkerBlockTheme: stl.talkerBlockD, activeLink: stl.activeLinkD, talkerBlockA: stl.talkerBlockA_D, msgMeDnmc: stl.myMsgD,\r\n        msgUserDnmc: stl.userMsgD, dialogAreaBackgroundNSecondScroll: stl.dialogAreaD, nameInHeaderDnmc: stl.nameInHeaderD, textAreaDnmc: stl.textareaD, sendBTNDnmc: stl.sendBTN_D,\r\n      });\r\n      case 'EVENING': return setThemes({\r\n        ...themes, dialogDnmc: stl.dialogE, firstScroller: stl.dialogListE, errBTNDnmc: stl.followBTN_ERR_E, talkerBlockTheme: stl.talkerBlockE, activeLink: stl.activeLinkE, talkerBlockA: stl.talkerBlockA_E, msgMeDnmc: stl.myMsgE,\r\n        msgUserDnmc: stl.userMsgE, dialogAreaBackgroundNSecondScroll: stl.dialogAreaE, nameInHeaderDnmc: stl.nameInHeaderE, textAreaDnmc: stl.textareaE, sendBTNDnmc: stl.sendBTN_E,\r\n      });\r\n    }\r\n  }, [colorTheme])\r\n\r\n  return themes.dialogDnmc ? <Dialogs\r\n    state={dialogsInfo}\r\n    userIdInURL={match?.params?.userId}\r\n    myId={myId}\r\n    delayFlag={themesDelayFlag}\r\n    themes={themes}\r\n    actions={dialogActions}\r\n    loaders={loaders}\r\n  /> : null;\r\n}\r\n\r\ntype DialogsProps_Type = {\r\n  myId: null | number\r\n  state: InitialDialogsState_Type\r\n  delayFlag: boolean\r\n  themes: Themes_Type\r\n  userIdInURL: undefined | string | number\r\n  actions: DialogsActions_Types\r\n  loaders: DialoguesThemes_Type\r\n}\r\n\r\ntype ServInfo_Type = {\r\n  [key: string]: {\r\n    flag?: boolean,\r\n    myId?: number | null,\r\n    dialogId?: number,\r\n    wasError?: boolean,\r\n    isMyMsg?: boolean,\r\n    deleteMsg?: (messageId: string, index: number) => void,\r\n    markAsSpam?: (messageId: string, index: number) => void,\r\n    sendMsg?: (userId: number, msg: string, actionKey: string, userName: string, senderId: number) => void,\r\n    servInfoCorrecter?: (msgId: string) => void,\r\n    closer?: (key: string) => void\r\n  }\r\n}\r\n\r\n\r\nlet Dialogs: React.FC<DialogsProps_Type> = ({ myId, state, themes, userIdInURL, actions, loaders, delayFlag }) => {\r\n\r\n  const dialogArea = useRef<HTMLDivElement | any>(null);\r\n  const bufferBlock = useRef<HTMLDivElement>(null);\r\n\r\n  interface AreaHeight { }\r\n  type Error_Type = { text?: string }\r\n\r\n  let [dialogId, setDialogId] = useState(userIdInURL === undefined ? 0 : +userIdInURL);\r\n  let [msgsMapDone, setMsgsMapDone] = useState(0); //диалог:  0 = не загружен, 1 = загружен первично, 2 = загрузка предыдущей части 3 = загружена предыдущая часть\r\n  let [dialogAreaHeight, setDialogAreaHeight] = useState<AreaHeight | any>(0);\r\n  let [userNameInHeader, setUserNameInHeader] = useState('');\r\n\r\n  let counterSetter = useSelector(getDialogsACs_compDialogs).prevMSGsCounterSetter;\r\n  let dispatch = useDispatch();\r\n\r\n  let getTalk = (userId: number) => {\r\n    setDialogId(dialogId = userId); dispatch(counterSetter(2)); actions.getTalkWithUserThunk(dialogId)\r\n  };\r\n\r\n  let oldMsgLazyLoader = () => {\r\n    actions.addPrevMessagesThunk(dialogId, 10, state.prevMSGsCounter);\r\n    setMsgsMapDone(2);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (msgsMapDone === 1) {\r\n      scrollToDown(bufferBlock)\r\n    }\r\n    else if (msgsMapDone === 3 && !state.prevMsgsIsLoading) {\r\n      dialogArea?.current?.scrollTo(0, dialogArea?.current?.scrollHeight - dialogAreaHeight)\r\n    }\r\n\r\n    if (dialogId) {\r\n      let user = state.dialogsList.find(el => el.id === dialogId)\r\n      if (user) return setUserNameInHeader(user.userName)\r\n    }\r\n  }, [msgsMapDone, !state.prevMsgsIsLoading])\r\n\r\n\r\n  type Value_Type = { text: string }\r\n  let submitter = (values: Value_Type, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n    actions.sendMessageToUserThunk(dialogId, values.text, uuidv4() as string, '', myId as number); values.text = ''; setSubmitting(false);\r\n    bufferBlock?.current?.scrollIntoView({ behavior: \"auto\" })\r\n  }\r\n\r\n  let keyCodeChecker = (e: KeyboardEvent, values: Value_Type, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n    if (e.keyCode == 13 && e.shiftKey) { return }\r\n    else if (e.keyCode === 13 && !state.certainDialogIsLoading && !state.errCertainDialogGet) {\r\n      submitter(values, { setSubmitting })\r\n    }\r\n  }\r\n  let validator = (values: Value_Type) => { let errors: Error_Type = {}; if (!values.text) { errors.text = 'Required' } return errors }\r\n\r\n\r\n  let [servInfo, setServInfo] = useState<ServInfo_Type>({})\r\n  let onRightClickListener = (e: React.MouseEvent<HTMLDivElement, MouseEvent>, i: number, arr: MessageData_Type[], msgId: string) => {\r\n    e.preventDefault();\r\n    let newServInfo = { ...servInfo }\r\n    if (!newServInfo[msgId]) newServInfo[msgId] = {}\r\n    newServInfo[msgId].flag = newServInfo[msgId]?.flag ? false : true;\r\n    newServInfo[msgId].myId = myId;\r\n    newServInfo[msgId].dialogId = dialogId;\r\n    newServInfo[msgId].wasError = state.errInSendingArr.some(el => el.actionKey === arr[i].actionKey)\r\n    newServInfo[msgId].isMyMsg = myId === arr[i].senderId;\r\n    newServInfo[msgId].deleteMsg = actions.deleteMessageThunk\r\n    newServInfo[msgId].markAsSpam = actions.setSpamMessagesThunk\r\n    newServInfo[msgId].sendMsg = actions.sendMessageToUserThunk\r\n    newServInfo[msgId].closer = (key: string) => modalCloser(key)\r\n    setServInfo(servInfo = newServInfo)\r\n  }\r\n\r\n  let [indexEl, setIndexEl] = useState<{ key: string }>({ key: '' })\r\n  useEffect(() => { if (indexEl.key) { let newServInfo = { ...servInfo }; delete newServInfo[indexEl.key]; setServInfo(servInfo = newServInfo); } }, [indexEl])\r\n  let modalCloser = (key: string) => { setIndexEl({ key }) }\r\n\r\n  window.onkeyup = ({ key }: KeyboardEvent) => { if (key === \"Escape\") { setServInfo(servInfo = {}) } };\r\n\r\n\r\n  let scrollToDown = (bufferBlock: any) => { bufferBlock.current && bufferBlock.current.scrollIntoView({ behavior: \"auto\" }) };\r\n\r\n  let [btnShow, setBtnShow] = useState<Number>(0); // 0: ничего не показывать, 1: кнопка вниз, 2: кнопка вверх (возвращает на предыдущую высоту)\r\n  let [wasClicked, setWasClicked] = useState(false)\r\n  let [prevHeight, setPrevHeight] = useState<Number>(0);\r\n  let [dialogChanging, setDialogChanging] = useState<boolean>(false)\r\n\r\n  let scrollControler = () => {\r\n    if (dialogArea?.current?.scrollHeight - dialogArea?.current?.scrollTop - dialogArea?.current?.clientHeight + 1 >= 200) { setBtnShow(1); setPrevHeight(0) }\r\n    else if (dialogArea?.current?.scrollHeight - dialogArea?.current?.scrollTop - dialogArea?.current?.clientHeight + 1 <= 200 && wasClicked) { setBtnShow(2) }\r\n    else { setBtnShow(0) }\r\n    if (wasClicked) setWasClicked(false)\r\n    !dialogArea?.current?.scrollTop && state?.certainDialog.items.length !== state.certainDialog.totalCount &&\r\n      !state.prevMsgsIsLoading && !dialogChanging && oldMsgLazyLoader()\r\n\r\n  }\r\n\r\n\r\n  let [prevBTNisShown, setPrevBTNisShown] = useState<boolean>(false);\r\n  let hasScroll = () => {\r\n    if (state.certainDialog.items.length)\r\n      dialogArea?.current?.scrollHeight > dialogArea?.current?.clientHeight ? setPrevBTNisShown(false) : setPrevBTNisShown(true);\r\n  }\r\n  (function () {\r\n    window.addEventListener(\"resize\", resizeThrottler, false);\r\n    let resizeTimeout: any;\r\n    function resizeThrottler() { if (!resizeTimeout) { resizeTimeout = setTimeout(() => { resizeTimeout = null; hasScroll(); }, 500); } }\r\n  }())\r\n\r\n\r\n  useEffect(() => { hasScroll() }, [state.certainDialogIsLoading, state.prevMsgsIsLoading])\r\n\r\n  return <>\r\n    <div className={cn(stl.dialogsPage, themes.dialogDnmc, delayFlag && stl.delay)}>\r\n      <div className={stl.dialogListAndArea}>\r\n        <div className={cn(stl.dialogList)}>\r\n          <div className={cn(stl.constrictor, themes.firstScroller)}>\r\n            {state.allDialogsIsLoading ?                                                 // диалоги загружаются?\r\n              <div className={stl.dialogListLoaderWrapper}>\r\n                <img className={stl.dialogListLoader} src={loaders.halfCircle_GIF} alt=\"Err\" />\r\n                <img className={stl.dialogListLoader} src={loaders.interSector_GIF} alt=\"Err\" />\r\n                <img className={stl.dialogListLoader} src={loaders.halfCircle_GIF} alt=\"Err\" />\r\n              </div>\r\n              :\r\n              state.errNegotiatorsListGet ?                                               // есть оштбки при загрузке?\r\n                <div className={stl.errorBlock}>\r\n                  <h2>Error!</h2>\r\n                  <div>\r\n                    <img src={state.errNegotiatorsListPIC} alt=\"Err\" />\r\n                  </div>\r\n                  <p>{state.errNegotiatorsListGet} Connection lost!</p>\r\n                  <button className={`${stl.errBTN} ${themes.sendBTNDnmc}`}\r\n                    onClick={() => actions.getMyNegotiatorsListThunk()}\r\n                  >Try again</button>\r\n                </div>\r\n                :\r\n                state.dialogsList\r\n                  .map((user, i) =>\r\n                    <div className={cn(stl.talkerBlock, themes.talkerBlockTheme, delayFlag && stl.delay)} key={i} >\r\n                      <div className={stl.avaWrapper}>\r\n                        <NavLink to={`/profile/${user.id}`} >\r\n                          <img src={user.photos.large || state.defaultAvatar} alt=\"err\" />\r\n                          <span className={cn(stl.msgCounter, themes.talkerBlockA)}> {user.hasNewMessages && `+${user.newMessagesCount}`}</span>\r\n                        </NavLink>\r\n                      </div>\r\n                      <div className={stl.userNameWrapper}>\r\n                        <NavLink to={`/dialogs/${user.id}`}\r\n                          onClick={() => { getTalk(user.id); setMsgsMapDone(0); setBtnShow(0); setDialogChanging(true); actions.userCompCleaner() }}\r\n                          className={themes.talkerBlockA}\r\n                          activeClassName={themes.activeLink}>\r\n                          {user.userName}\r\n                        </NavLink>\r\n                      </div>\r\n                    </div>)}\r\n          </div>\r\n        </div>\r\n        <div className={stl.dialogsAreaAndSender}>\r\n          <div className={stl.editWrapper}>\r\n            <h2 className={themes.nameInHeaderDnmc}>{userNameInHeader}</h2>\r\n          </div>\r\n          <div className={cn(stl.dialogArea, themes.dialogAreaBackgroundNSecondScroll)}\r\n            ref={dialogArea} onScroll={() => scrollControler()} onContextMenu={e => e.preventDefault()} >\r\n            {!state.dialogsList.length && !state.allDialogsIsLoading && !state.errNegotiatorsListGet &&            // если ни с кем еще не было диалогов\r\n              <div className={stl.noDialogsList}>\r\n                <p>No dialogs here so far...</p>\r\n              </div>}\r\n            <div className={stl.oldMsgsLoader}>\r\n              {state.prevMsgsIsLoading ? <img src={loaders.prevMSGLDR_GIF} alt=\"Err\" /> :                          // предыдущие сообщения грузятся? | лодер\r\n                state.errAtGettingPrevMsgs && <button\r\n                  className={cn(stl.prevBTNLdrBasic, prevBTNisShown ? themes.errBTNDnmc : stl.BTNPassive)}\r\n                  onClick={() => { return prevBTNisShown ? oldMsgLazyLoader() : null }}\r\n                >Failed to load previous messages. Try again.</button>                                             // есть ошибка?                   | соболезнования\r\n              }\r\n              {prevBTNisShown && !state.errAtGettingPrevMsgs && !state.prevMsgsIsLoading &&\r\n                !state.certainDialogIsLoading && state?.certainDialog.items.length !== state.certainDialog.totalCount &&\r\n                <button onClick={oldMsgLazyLoader}\r\n                  className={cn(stl.prevBTNLdrBasic, prevBTNisShown ? stl.addPrevBTNShown : stl.addPrevBTNHidden, themes.sendBTNDnmc)}\r\n                >Add previous messages</button>}\r\n            </div>\r\n            {state.certainDialogIsLoading ? <div className={stl.certainLDRWrapper}><img src={loaders.certainLDR_GIF} alt=\"err\" /></div> :\r\n              state.errCertainDialogGet ? <div className={stl.errorBlock}> {state.errCertainDialogGet}</div> :\r\n                dialogId ? state?.certainDialog?.items\r\n                  .map((msg, i, msgs) => {\r\n                    if (msgsMapDone === 0 && i === msgs.length - 1) { setMsgsMapDone(1); setDialogAreaHeight(dialogArea?.current?.scrollHeight); setDialogChanging(false) }\r\n                    if (msgsMapDone === 2 && i === msgs.length - 1) { setMsgsMapDone(3); setDialogAreaHeight(dialogArea?.current?.scrollHeight); setDialogChanging(false) }\r\n\r\n                    return <div\r\n                      key={msg.id}\r\n                      className={cn(myId !== null && +msg.senderId === +myId ? `${stl.messageBlockMe} ${themes.msgMeDnmc} ${delayFlag && stl.delay} ` : `${stl.messageBlockUser} ${themes.msgUserDnmc} ${delayFlag && stl.delay}`)}\r\n                      id={msg.id}\r\n                      onContextMenu={(e) => {\r\n                        return state.sendndigInProgress.some(el => el === msg.actionKey) ? null : onRightClickListener(e, i, msgs, msg.id)\r\n                      }}\r\n                    >\r\n                      <p className={stl.messageBody} >{msg.body}</p>\r\n                      <div className={stl.msgStatWrapper}>\r\n                        {state.forDeletingMsgsArr.some(id => id === msg.id) && <img className={stl.ldrAndErr} src={state.msgLoaderGIF} alt=\"Err\" />}\r\n                        {state.sendndigInProgress.some(el => el === msg.actionKey) && <img className={stl.ldrAndErr} src={state.msgLoaderGIF} alt=\"Err\" />}\r\n                        {state.errInSendingArr.some(el => el.actionKey === msg.actionKey) && <img className={stl.ldrAndErr} src={state.onError} alt=\"Err\" />}\r\n                        <p className={cn(\r\n                          state.errInSendingArr.some(el => el.actionKey === msg.actionKey) || state.errAtDeletingMsgsArr.some(el => el.messageId === msg.id) ? stl.errorMarker :\r\n                            myId !== null && +msg.senderId === +myId ? stl.messageBlockTimeMe : stl.messageBlockTimeUser)}\r\n                        > {state.sendndigInProgress.some(el => el === msg.actionKey) ? 'loading...' :                                         // сообщение  отправляется? \r\n                          state.forDeletingMsgsArr.some(id => id === msg.id) ? 'deleting...' :                                                // сообщение удаляется?\r\n                            state.errInSendingArr.some(el => el.actionKey === msg.actionKey) ?                                                // пришла ошибка от сервера? \r\n                              state.errInSendingArr.map(el => { if (el.actionKey === msg.actionKey) return `Error: ${el.error}!` }) :\r\n                              state.errAtDeletingMsgsArr.some(el => el.messageId === msg.id) ?                                                // ошибка при удалении? \r\n                                state.errAtDeletingMsgsArr.map(el => { if (el.messageId === msg.id) return `Deletng error!` }) :\r\n\r\n                                `${msg.addedAt.substring(2, 10)}  ${msg.addedAt.substring(11, 16)}`                                           // тогда рендерим инфо\r\n                          } </p>\r\n                        {state.sendndigInProgress.some(el => el === msg.actionKey) === false && state.errInSendingArr.some(el => el.actionKey === msg.actionKey) === false &&\r\n                          <img className={stl.checkMark} src={msg.viewed ? state.msgSeenFlagPIC : state.msgDeliveredFlagPIC} alt=\"Err\" />}\r\n                      </div>\r\n                      {servInfo[msg.id]?.flag && <ModalMenu\r\n                        index={i}\r\n                        msgEl={msgs[i]}\r\n                        servInfo={servInfo[msg.id]}\r\n                      />}\r\n                    </div>\r\n                  }) : null}\r\n            <div ref={bufferBlock} />\r\n          </div>\r\n          <div className={stl.sender}>\r\n\r\n            <button className={btnShow === 0 ? stl.scrollToDownBtnHidden : btnShow === 1 ? stl.scrollToDownBtn : stl.scrollToPrevHeightBTN}\r\n\r\n              onClick={() => {\r\n                if (btnShow === 1) { setPrevHeight(dialogArea?.current?.scrollTop); scrollToDown(bufferBlock); setWasClicked(true) }\r\n                else if (btnShow === 2) { dialogArea?.current?.scrollTo(0, prevHeight); setPrevHeight(0) }\r\n              }}>\r\n              <img src={state.arrowDownPIC} alt=\"Err\" />\r\n            </button>\r\n            <div className={stl.senderWrapper}>\r\n              <Formik initialValues={{ text: '' }} validate={validator} onSubmit={submitter} >\r\n                {({ values, errors, handleChange, handleSubmit, isSubmitting, setSubmitting }) => (\r\n                  <form onSubmit={handleSubmit} >\r\n                    <Field name=\"text\" onChange={handleChange} value={values.text} placeholder={errors.text} as='textarea'\r\n                      className={cn(stl.txtAreaField, themes.textAreaDnmc, delayFlag && stl.delay)} disabled={!dialogId}\r\n                      onKeyDown={(e: KeyboardEvent) => (keyCodeChecker(e, values, {\r\n                        setSubmitting\r\n                      }))}\r\n                    />\r\n                    <div className={stl.sendBTNWrapper}>\r\n                      {dialogId ?\r\n                        <button disabled={isSubmitting || state.certainDialogIsLoading || !!state.errCertainDialogGet} className={cn(stl.sendBTN, themes.sendBTNDnmc)}\r\n                        > Send </button> : null\r\n                      }\r\n                    </div>\r\n                  </form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </>\r\n};\r\n\r\n\r\ntype ModalMenuProps_Type = {\r\n  index: number,\r\n  msgEl: MessageData_Type,\r\n  servInfo: ServInfo_Type['key'] | any // тут всё до невозможности понятно, any исключительно возможно для того чтобы ts возможно отстал со своим невозможным possibly undefined\r\n}\r\n\r\nlet ModalMenu = React.memo(({ index, msgEl, servInfo }: ModalMenuProps_Type) => {\r\n\r\n\r\n  let spamMarker = (msgId: string, index: number) => { servInfo.markAsSpam(msgId, index); servInfo.closer(msgEl.id) }\r\n  let msgDeleter = (msgId: string, index: number) => { servInfo.deleteMsg(msgId, index); servInfo.closer(msgEl.id) }\r\n  let msgSender = (dialogId: number, mesgBody: string, actionKey: string, userName: string, myId: number) => { servInfo?.sendMsg(dialogId, mesgBody, actionKey, userName, myId); servInfo?.closer(msgEl.id) }\r\n\r\n  return <div className={cn(servInfo?.isMyMsg ? `${stl.contextMenu} ${stl.contMenuMyMsg}` : `${stl.contextMenu} ${stl.contMenuFriendMsg}`)}>\r\n    <div className={stl.contextMenuUpper} >\r\n      <div className={stl.repeatNSpam} onClick={() => spamMarker(msgEl.id, index)}>Mark as spam</div>\r\n      <button onClick={() => servInfo?.closer(msgEl.id)}>X</button>\r\n    </div>\r\n    <div className={stl.deleteMsg} onClick={() => servInfo?.wasError ? msgSender(servInfo?.dialogId, msgEl.body, msgEl.actionKey, '', servInfo?.myId) : msgDeleter(msgEl.id, index)}>\r\n      {servInfo?.wasError ? 'Resend' : 'Delete message'}</div>\r\n  </div>\r\n})\r\n\r\nexport default DialogFuncContainer;\r\n\r\n"],"sourceRoot":""}