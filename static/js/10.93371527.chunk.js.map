{"version":3,"sources":["components/content/friends/friends.tsx","components/content/friends/friendsContainer.tsx"],"names":["Friends","themes","palsFuncs","palsInfo","useState","wrapperLocker","setWrapperLocker","friendsListPage","setFriendsListPage","getMyFriendsListener","page","getMyFriendsListThunk","mapWrapperRef","React","createRef","servInfo","writeMsgMode","setWriteMsgMode","window","onkeyup","e","key","length","newServInfo","forEach","el","undefined","flag","userUnitStlDefolter","index","elem","indexEl","setIndexEl","useEffect","finalState","className","cn","stl","userUnit","userUnitDnmc","userUnitShowed","filter","every","wrapperUnlocked","modalCloser","i","delayFlag","setDelayFlag","setTimeout","friendsGeneral","friendsGeneralDnmc","delay","friendsListIsLoading","loaderDiv_Friends","loader","src","generalLDR_GIF","alt","errOnGettingFriends","Houston","moreUsersShower","pagBTNDnmc","onClick","friendsList","friendsHeader","generalHeaderDnmc","friendsHeaderH2","friendsCount","ref","mapWrapper","mapWrapperDnmc","map","user","users","userUnitContainer","id","userUnitHidden","avaDiv","to","photos","large","defaultAvatar","userAvaDnmc","nameStateBTNs","userBlockInfo","userName","userNameDnmc","name","status","followNWriteBTNS","disabled","followingInProgress","some","followBTN","error","followBTN_ERR_DNMC","followBTNDnmc","userId","userIsFollowed","followed","followThunkToggler","followBTNContainer","followBTNText","onFollowingErrBTN","tryAgainBTN","followBTNLoader","BTN_FLW_GIF","current","target","parentElement","getBoundingClientRect","top","scrollIntoView","behavior","wrapperLocked","closer","event","userIdTalkModeOn","userEl","sendMsg","sendMessageToUserThunk","moreUserUnits","moreUserUnitsDnmc","moreFriendsIsLoading","moreFriendsLoadErr","noFriendsWrapper","FriendsFuncContainer","colorTheme","useSelector","getColorTheme","GetSmartFriendsReducer","dispatch","useDispatch","friendsACs","getFriendsACs","dialogsACs","getDialogsACs_compUsers","getMyFriendsListThunkAC","isFollowed","followThunkTogglerAC","body","actionKey","sendMessageToUserThunkAC","unMountCleaner","paginationSelectedDnmc","paginationDnmc","searchInputDnmc","userWriteModeDnmc","setThemes","friendsGeneralN","generalHeaderN","pagBTN_N","paginationSelectedN","paginationN","searchInputN","userAvaN","followBTN_N","followBTN_ERR_N","userNameN","mapWrapperN","userUnitN","userWriteModeN","moreUserUnitsN","friendsGeneralM","generalHeaderM","pagBTN_M","paginationSelectedM","paginationM","searchInputM","userAvaM","followBTN_M","followBTN_ERR_M","userNameM","mapWrapperM","userUnitM","userWriteModeM","moreUserUnitsM","friendsGeneralD","generalHeaderD","pagBTN_D","paginationSelectedD","paginationD","searchInputD","userAvaD","followBTN_D","followBTN_ERR_D","userNameD","mapWrapperD","userUnitD","userWriteModeD","moreUserUnitsD","friendsGeneralE","generalHeaderE","pagBTN_E","paginationSelectedE","paginationE","searchInputE","userAvaE","followBTN_E","followBTN_ERR_E","userNameE","mapWrapperE","userUnitE","userWriteModeE","moreUserUnitsE"],"mappings":"qPAiBWA,EAAuC,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAAe,EAE7CC,mBAAiB,IAF4B,mBAEhFC,EAFgF,KAEjEC,EAFiE,OAGzCF,mBAAiB,GAHwB,mBAGhFG,EAHgF,KAG/DC,EAH+D,KAMjFC,EAAuB,SAACC,GAAmBR,EAAUS,sBAAsBD,IAG3EE,EAAgBC,IAAMC,YAT2D,EAW/CV,mBAAyB,CAAEW,SAAU,KAXU,mBAWhFC,EAXgF,KAWlEC,EAXkE,KAsCrFC,OAAOC,QAAU,SAACC,GAAiC,WAAVA,EAAEC,KATjB,WACxB,GAAIL,EAAaD,SAASO,OAAQ,CAChC,IAAIC,EAAW,YAAOP,EAAaD,UACnCQ,EAAYC,SAAQ,SAAAC,QAAmBC,IAAPD,IAAkBA,EAAGE,MAAO,MAE5DV,EAAgBD,EADC,CAAED,SAAUQ,IACejB,EAAiB,KAIFsB,IAtCsB,MAyCzDxB,mBAAuB,CAAEyB,OAAQ,EAAGC,KAAM,KAzCe,mBAyChFC,EAzCgF,KAyCvEC,EAzCuE,KA2CrFC,qBAAU,WACR,GAAIF,EAAQF,OAAS,EAAG,CACtB,IAAIN,EAAW,YAAOP,EAAaD,UACnCQ,EAAYQ,EAAQF,OAAOF,MAAO,EAClC,IAAIO,EAAa,CAAEnB,SAAUQ,GAC7BQ,EAAQD,KAAKK,UAAYC,IAAGC,IAAIC,SAAUrC,EAAOsC,aAAcF,IAAIG,gBACnEvB,EAAgBD,EAAekB,GAC3BX,EAAYkB,QAAO,SAAAhB,GAAE,YAAWC,IAAPD,KAAkBiB,OAAM,SAAAjB,GAAE,OAAgB,IAAZA,EAAGE,SAAiBrB,EAAiB+B,IAAIM,oBAErG,CAACZ,IAEJ,IAAIa,EAAc,SAACC,EAAWzB,GAAaY,EAAW,CAAEH,MAAOgB,EAAGf,KAAMV,KAtDa,EAwDrDhB,oBAAS,GAxD4C,mBAwDhF0C,EAxDgF,KAwDrEC,EAxDqE,KA6DrF,OAJAd,qBAAU,WACRe,YAAW,WAAQD,GAAa,KAAS,OACxC,IAEI,oCACL,yBAAKZ,UAAWC,IAAGC,IAAIY,eAAgBhD,EAAOiD,mBAAoBJ,GAAaT,IAAIc,QAChFhD,EAASiD,qBACR,yBAAKjB,UAAWE,IAAIgB,mBAClB,yBAAKlB,UAAWE,IAAIiB,OAAQC,IAAKpD,EAASqD,eAAgBC,IAAI,SAEhEtD,EAASuD,oBACP,yBAAKvB,UAAWC,IAAGC,IAAIsB,UACrB,+DACA,4BAAKxD,EAASuD,qBACd,4BAAQvB,UAAS,UAAKE,IAAIuB,gBAAT,YAA4B3D,EAAO4D,YAAcC,QAAS,kBAAMrD,EAAqBF,KAAtG,cAIDJ,EAAS4D,YAAYzC,OAIpB,oCACE,yBAAKa,UAAWC,IAAGC,IAAI2B,cAAe/D,EAAOgE,oBAC3C,wBAAI9B,UAAWE,IAAI6B,iBAAnB,WAA6C/D,EAASgE,aAAT,WAA4BhE,EAAS4D,YAAYzC,OAAjD,cAA6DnB,EAASgE,aAAtE,KAAwF,OAEvI,yBAAKC,IAAKxD,EAAeuB,UAAWC,IAAGC,IAAIgC,WAAYpE,EAAOqE,eAAgBjE,IAC3EF,EAAS4D,YAAYQ,KAAI,SAACC,EAAgB3B,EAAG4B,GAApB,eACxB,yBAAKtC,UAAWE,IAAIqC,kBAAmBrD,IAAKmD,EAAKG,IAC/C,yBAAKxC,WAAW,UAACnB,EAAaD,SAAS8B,UAAvB,aAAC,EAA0BlB,MACzCS,IAAGC,IAAIuC,gBADyCxC,IAAGC,IAAIC,SAAUrC,EAAOsC,aAAcF,IAAIG,iBAE1F,yBAAKL,UAAWE,IAAIwC,QAClB,kBAAC,IAAD,CAASC,GAAE,mBAAcN,EAAKG,KAC5B,yBAAKpB,IAAKiB,EAAKO,OAAOC,OAAS7E,EAAS8E,cAAexB,IAAI,MACzDtB,UAAS,UAAKlC,EAAOiF,iBAG3B,yBAAK/C,UAAWE,IAAI8C,eAClB,yBAAKhD,UAAWE,IAAI+C,eAClB,kBAAC,IAAD,CAASN,GAAE,mBAAcN,EAAKG,KAC5B,wBAAIxC,UAAWC,IAAGC,IAAIgD,SAAUpF,EAAOqF,eAAgBd,EAAKe,KAA5D,MAEF,uBAAGpD,UAAS,UAAKlC,EAAOqF,eAAiBd,EAAKgB,SAEhD,yBAAKrD,UAAWE,IAAIoD,kBAClB,4BACEd,GAAIH,EAAKG,GACTe,SAAUvF,EAASwF,oBAAoBC,MAAK,SAAAjB,GAAE,OAAIA,IAAOH,EAAKG,MAC9DxC,UAAWC,IAAGC,IAAIwD,UAAWrB,EAAKsB,MAAQ7F,EAAO8F,mBAAqB9F,EAAO+F,eAC7ElC,QAAS,kBArGNmC,EAqGkCzB,EAAKG,GArGvBuB,EAqG2B1B,EAAK2B,SArGPL,EAqGiBtB,EAAKsB,WArGF5F,EAAUkG,mBAAmBH,EAAQC,EAAgBJ,GAAnH,IAACG,EAAgBC,EAAyBJ,IAuG5C,yBAAK3D,UAAWE,IAAIgE,oBAClB,yBAAKlE,UAAWE,IAAIiE,eACjB9B,EAAKsB,MACJ,oCACE,uBAAG3D,UAAWE,IAAIkE,mBAAoB/B,EAAKsB,OAC3C,uBAAG3D,UAAWE,IAAImE,aAAlB,eAGFhC,EAAK2B,SAAW,WAAa,SAPjC,KAQA,yBAAKhE,UAAWE,IAAIoE,iBAApB,IAAuCtG,EAASwF,oBAAoBC,MAAK,SAAAjB,GAAE,OAAIA,IAAOH,EAAKG,OAAO,yBAAKpB,IAAKpD,EAASuG,YAAajD,IAAI,QAAtI,OAGJ,4BAAQtB,UAAS,UAAKE,IAAIwD,UAAT,YAAsB5F,EAAO+F,eAC5ClC,QAAS,SAAC1C,GAAD,OA5GZ,SAACA,EAAQyB,GAAe,IAAD,GAC3B,OAAbjC,QAAa,IAAbA,OAAA,EAAAA,EAAe+F,UAAWvF,EAAEwF,OAAOC,cAAcA,cAAcA,cAAcA,cAAcC,wBAAwBC,MAAzF,OAAgGnG,QAAhG,IAAgGA,GAAhG,UAAgGA,EAAe+F,eAA/G,aAAgG,EAAwBG,wBAAwBC,MAC5K3F,EAAEwF,OAAOC,cAAcA,cAAcA,cAAcA,cAAcG,eAAe,CAAEC,SAAU,WAE9F3G,EAAiB+B,IAAI6E,eAErB,IAAI3F,EAAW,YAAOP,EAAaD,eAEZW,IAAnBH,EAAYsB,GAAoBtB,EAAYsB,GAAK,CAAElB,MAAM,IAC5B,IAAxBJ,EAAYsB,GAAGlB,KAAiBJ,EAAYsB,GAAGlB,MAAO,GAC9B,IAAxBJ,EAAYsB,GAAGlB,OAAkBJ,EAAYsB,GAAGlB,MAAO,GAChEJ,EAAYsB,GAAGsE,OAAS,SAACtF,EAAeuF,GAAhB,OAA+BxE,EAAYf,EAAOuF,IAE1EnG,EAAgBD,EADC,CAAED,SAAUQ,IAgGW8F,CAAiBjG,EAAGyB,KADtC,sBAOL,UAAA7B,EAAaD,SAAS8B,UAAtB,eAA0BlB,OACzB,kBAAC,IAAD,CACEE,MAAOgB,EACPyE,OAAQ7C,EAAM5B,GACd5C,OAAQA,EACRsH,QAASrH,EAAUsH,uBACnBL,OAAQnG,EAAaD,SAAS8B,GAAGsE,OACjCrE,UAAWA,SAKrB,yBAAKX,UAAWC,IAAGC,IAAIoF,cAAexH,EAAOyH,kBAAmB5E,GAAaT,IAAIc,QAC/E,4BACEuC,SAAUvF,EAASwH,sBAAwBxH,EAASgE,eAAiBhE,EAAS4D,YAAYzC,OAC1Fa,UAAWC,IAAGC,IAAIuB,gBAAiBzD,EAASuD,oBAAsBzD,EAAO8F,mBAAqB9F,EAAO4D,YACrGC,QAAS,WAAQtD,IAAqBD,GAAkBE,EAAqBF,KAE7E,yBAAK4B,UAAWE,IAAIgE,oBAClB,yBAAKlE,UAAWE,IAAIiE,eACjBnG,EAASuD,oBACR,oCACE,uBAAGvB,UAAWE,IAAIkE,mBAAoBpG,EAASyH,mBAA/C,SACA,uBAAGzF,UAAWE,IAAImE,aAAlB,eAGFrG,EAASgE,eAAiBhE,EAAS4D,YAAYzC,OAAS,mBAAqB,cAPjF,KAQA,yBAAKa,UAAWE,IAAIoE,iBAApB,IAAuCtG,EAASwH,sBAAwB,yBAAKpE,IAAKpD,EAASuG,YAAajD,IAAI,QAA5G,SA9ER,yBAAKtB,UAAWE,IAAIwF,kBAClB,4D,OCmCCC,UA5GY,WAEzB,IAAIC,EAAaC,YAAYC,KACzB9H,EAA4D6H,YAAYE,KAExEC,EAAWC,cACXC,EAAyBL,YAAYM,KACrCC,EAAiCP,YAAYQ,KAG7C7H,EAAwB,SAACD,GAAmByH,EAASE,EAAWI,wBAAwB/H,KAMxFR,EAAiC,CAAES,wBAAuByF,mBALrC,SAACH,EAAgByC,EAAqB5C,GAAoBqC,EAASE,EAAWM,qBAAqB1C,EAAQyC,EAAY5C,KAK9D0B,uBAJrD,SAACvB,EAAgB2C,EAAcC,EAAmBxD,GAC7E8C,EAASI,EAAWO,yBAAyB7C,EAAQ2C,EAAMC,EAAWxD,GAAW,MAKnFpD,qBAAU,WAER,OADAtB,EAAsB,GACf,WAL2BwH,EAASE,EAAWU,qBAMrD,IArB4B,MAwBL3I,mBAA0B,CAClD8C,mBAAoB,GAAIe,kBAAmB,GAAIJ,WAAY,GAAImF,uBAAwB,GAAIC,eAAgB,GAAIC,gBAAiB,GAAIhE,YAAa,GAAIc,cAAe,GAAID,mBAAoB,GAAIT,aAAc,GAAIhB,eAAgB,GAAI/B,aAAc,GAAI4G,kBAAmB,GAAIzB,kBAAmB,KAzBrQ,mBAwB1BzH,EAxB0B,KAwBlBmJ,EAxBkB,KAyG/B,OA7EAnH,qBAAU,WACR,OAAQ8F,GACN,IAAK,QACH,OAAOqB,EAAU,eACZnJ,EADW,CAEdiD,mBAAoBb,IAAIgH,gBACxBpF,kBAAmB5B,IAAIiH,eACvBzF,WAAYxB,IAAIkH,SAChBP,uBAAwB3G,IAAImH,oBAC5BP,eAAgB5G,IAAIoH,YACpBP,gBAAiB7G,IAAIqH,aACrBxE,YAAa7C,IAAIsH,SACjB3D,cAAe3D,IAAIuH,YACnB7D,mBAAoB1D,IAAIwH,gBACxBvE,aAAcjD,IAAIyH,UAClBxF,eAAgBjC,IAAI0H,YACpBxH,aAAcF,IAAI2H,UAClBb,kBAAmB9G,IAAI4H,eACvBvC,kBAAmBrF,IAAI6H,kBAE3B,IAAK,UACH,OAAOd,EAAU,eACZnJ,EADW,CAEdiD,mBAAoBb,IAAI8H,gBACxBlG,kBAAmB5B,IAAI+H,eACvBvG,WAAYxB,IAAIgI,SAChBrB,uBAAwB3G,IAAIiI,oBAC5BrB,eAAgB5G,IAAIkI,YACpBrB,gBAAiB7G,IAAImI,aACrBtF,YAAa7C,IAAIoI,SACjBzE,cAAe3D,IAAIqI,YACnB3E,mBAAoB1D,IAAIsI,gBACxBrF,aAAcjD,IAAIuI,UAClBtG,eAAgBjC,IAAIwI,YACpBtI,aAAcF,IAAIyI,UAClB3B,kBAAmB9G,IAAI0I,eACvBrD,kBAAmBrF,IAAI2I,kBAE3B,IAAK,MACH,OAAO5B,EAAU,eACZnJ,EADW,CAEdiD,mBAAoBb,IAAI4I,gBACxBhH,kBAAmB5B,IAAI6I,eACvBrH,WAAYxB,IAAI8I,SAChBnC,uBAAwB3G,IAAI+I,oBAC5BnC,eAAgB5G,IAAIgJ,YACpBnC,gBAAiB7G,IAAIiJ,aACrBpG,YAAa7C,IAAIkJ,SACjBvF,cAAe3D,IAAImJ,YACnBzF,mBAAoB1D,IAAIoJ,gBACxBnG,aAAcjD,IAAIqJ,UAClBpH,eAAgBjC,IAAIsJ,YACpBpJ,aAAcF,IAAIuJ,UAClBzC,kBAAmB9G,IAAIwJ,eACvBnE,kBAAmBrF,IAAIyJ,kBAE3B,IAAK,UACH,OAAO1C,EAAU,eACZnJ,EADW,CAEdiD,mBAAoBb,IAAI0J,gBACxB9H,kBAAmB5B,IAAI2J,eACvBnI,WAAYxB,IAAI4J,SAChBjD,uBAAwB3G,IAAI6J,oBAC5BjD,eAAgB5G,IAAI8J,YACpBjD,gBAAiB7G,IAAI+J,aACrBlH,YAAa7C,IAAIgK,SACjBrG,cAAe3D,IAAIiK,YACnBvG,mBAAoB1D,IAAIkK,gBACxBjH,aAAcjD,IAAImK,UAClBlI,eAAgBjC,IAAIoK,YACpBlK,aAAcF,IAAIqK,UAClBvD,kBAAmB9G,IAAIsK,eACvBjF,kBAAmBrF,IAAIuK,qBAG5B,CAAC7E,IAEG,kBAAC,EAAD,CAAS9H,OAAQA,EAAQC,UAAWA,EAAWC,SAAUA","file":"static/js/10.93371527.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport stl from './../users/users.module.css'\r\nimport { PalsThemes_Type, FriendsActions_Type } from './friendsContainer';\r\nimport { InitialFriendsInfo_Type } from '../../../redux/friendsReducer';\r\nimport { UsersArr } from '../../../redux/app';\r\nimport { UsersThemesBGR_Type } from '../../../redux/backGroundSetter';\r\nimport cn from 'classnames/bind';\r\nimport { ModalMsgs_Type, WriterMode } from '../users/users';\r\n\r\n\r\ntype FriendsProps_Type = {\r\n  themes: PalsThemes_Type\r\n  palsInfo: InitialFriendsInfo_Type & UsersThemesBGR_Type\r\n  palsFuncs: FriendsActions_Type\r\n}\r\n\r\nexport let Friends: React.FC<FriendsProps_Type> = ({ themes, palsFuncs, palsInfo }) => {\r\n\r\n  let [wrapperLocker, setWrapperLocker] = useState<string>('');\r\n  let [friendsListPage, setFriendsListPage] = useState<number>(1);\r\n\r\n  let followTogglerListener = (userId: number, userIsFollowed: boolean, error: string) => { palsFuncs.followThunkToggler(userId, userIsFollowed, error) }\r\n  let getMyFriendsListener = (page: number) => { palsFuncs.getMyFriendsListThunk(page) }\r\n\r\n\r\n  let mapWrapperRef = React.createRef<HTMLDivElement>();\r\n\r\n  let [writeMsgMode, setWriteMsgMode] = useState<ModalMsgs_Type>({ servInfo: [] })\r\n\r\n  let userIdTalkModeOn = (e: any, i: number) => {\r\n    if (mapWrapperRef?.current && e.target.parentElement.parentElement.parentElement.parentElement.getBoundingClientRect().top <= mapWrapperRef?.current?.getBoundingClientRect().top) {\r\n      e.target.parentElement.parentElement.parentElement.parentElement.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n    setWrapperLocker(stl.wrapperLocked);\r\n\r\n    let newServInfo = [...writeMsgMode.servInfo]\r\n\r\n    if (newServInfo[i] === undefined) { newServInfo[i] = { flag: true } }\r\n    else if (newServInfo[i].flag === true) { newServInfo[i].flag = false; }\r\n    else if (newServInfo[i].flag === false) { newServInfo[i].flag = true; }\r\n    newServInfo[i].closer = (index: number, event: any) => modalCloser(index, event)\r\n    let finalState = { servInfo: newServInfo }\r\n    setWriteMsgMode(writeMsgMode = finalState)\r\n  }\r\n\r\n  let userUnitStlDefolter = () => {\r\n    if (writeMsgMode.servInfo.length) {\r\n      let newServInfo = [...writeMsgMode.servInfo]\r\n      newServInfo.forEach(el => { if (el !== undefined) el.flag = false })\r\n      let finalState = { servInfo: newServInfo }\r\n      setWriteMsgMode(writeMsgMode = finalState); setWrapperLocker('');\r\n    }\r\n  }\r\n\r\n  window.onkeyup = (e: KeyboardEvent) => { e.key === 'Escape' && userUnitStlDefolter() }\r\n\r\n  type indexEl_Type = { index: number, elem: any }\r\n  let [indexEl, setIndexEl] = useState<indexEl_Type>({ index: -1, elem: '' })\r\n\r\n  useEffect(() => {\r\n    if (indexEl.index >= 0) {\r\n      let newServInfo = [...writeMsgMode.servInfo]\r\n      newServInfo[indexEl.index].flag = false\r\n      let finalState = { servInfo: newServInfo }\r\n      indexEl.elem.className = cn(stl.userUnit, themes.userUnitDnmc, stl.userUnitShowed)\r\n      setWriteMsgMode(writeMsgMode = finalState)\r\n      if (newServInfo.filter(el => el !== undefined).every(el => el.flag === false)) setWrapperLocker(stl.wrapperUnlocked);\r\n    }\r\n  }, [indexEl])\r\n\r\n  let modalCloser = (i: number, e: any) => { setIndexEl({ index: i, elem: e }) }\r\n\r\n  let [delayFlag, setDelayFlag] = useState(false)\r\n  useEffect(() => {\r\n    setTimeout(() => { setDelayFlag(true) }, 4000)\r\n  }, [])\r\n\r\n  return <>\r\n    <div className={cn(stl.friendsGeneral, themes.friendsGeneralDnmc, delayFlag && stl.delay)}>\r\n      {palsInfo.friendsListIsLoading ?                                                    // список друзей загружается? \r\n        <div className={stl.loaderDiv_Friends}>\r\n          <img className={stl.loader} src={palsInfo.generalLDR_GIF} alt=\"Err\" />\r\n        </div> :\r\n        palsInfo.errOnGettingFriends ?                                                    // есть ошибка при загрузке?\r\n          <div className={cn(stl.Houston)}>\r\n            <h2>Houston, we've got a problem...</h2>\r\n            <h2>{palsInfo.errOnGettingFriends}</h2>\r\n            <button className={`${stl.moreUsersShower} ${themes.pagBTNDnmc}`} onClick={() => getMyFriendsListener(friendsListPage)}\r\n            >Try again</button>\r\n          </div>\r\n          :\r\n          !palsInfo.friendsList.length ?                                                  //есть ли друзья в списке?\r\n            <div className={stl.noFriendsWrapper}>\r\n              <p>No friends here so far...</p>\r\n            </div> :\r\n            <>\r\n              <div className={cn(stl.friendsHeader, themes.generalHeaderDnmc)}>\r\n                <h2 className={stl.friendsHeaderH2}>Friends {palsInfo.friendsCount ? `(${palsInfo.friendsList.length} / ${palsInfo.friendsCount})` : null}</h2>\r\n              </div>\r\n              <div ref={mapWrapperRef} className={cn(stl.mapWrapper, themes.mapWrapperDnmc, wrapperLocker)}>\r\n                {palsInfo.friendsList.map((user: UsersArr, i, users) =>\r\n                  <div className={stl.userUnitContainer} key={user.id}>\r\n                    <div className={!writeMsgMode.servInfo[i]?.flag ? cn(stl.userUnit, themes.userUnitDnmc, stl.userUnitShowed) :\r\n                      cn(stl.userUnitHidden)} >\r\n                      <div className={stl.avaDiv}>\r\n                        <NavLink to={`/profile/${user.id}`}>\r\n                          <img src={user.photos.large || palsInfo.defaultAvatar} alt='err'\r\n                            className={`${themes.userAvaDnmc}`} />\r\n                        </NavLink>\r\n                      </div>\r\n                      <div className={stl.nameStateBTNs}>\r\n                        <div className={stl.userBlockInfo}>\r\n                          <NavLink to={`/profile/${user.id}`}>\r\n                            <h2 className={cn(stl.userName, themes.userNameDnmc)}>{user.name} </h2>\r\n                          </NavLink>\r\n                          <p className={`${themes.userNameDnmc}`}>{user.status}</p>\r\n                        </div>\r\n                        <div className={stl.followNWriteBTNS}>\r\n                          <button\r\n                            id={user.id}\r\n                            disabled={palsInfo.followingInProgress.some(id => id === user.id)}\r\n                            className={cn(stl.followBTN, user.error ? themes.followBTN_ERR_DNMC : themes.followBTNDnmc)}\r\n                            onClick={() => followTogglerListener(user.id, user.followed, user.error)}\r\n                          >\r\n                            <div className={stl.followBTNContainer}>\r\n                              <div className={stl.followBTNText}>\r\n                                {user.error ?\r\n                                  <>\r\n                                    <p className={stl.onFollowingErrBTN}>{user.error}</p>\r\n                                    <p className={stl.tryAgainBTN}>Try again!</p>\r\n                                  </>\r\n                                  :\r\n                                  user.followed ? 'unFollow' : 'Follow'} </div>\r\n                              <div className={stl.followBTNLoader}> {palsInfo.followingInProgress.some(id => id === user.id) && <img src={palsInfo.BTN_FLW_GIF} alt=\"Err\" />} </div>\r\n                            </div>\r\n                          </button>\r\n                          <button className={`${stl.followBTN} ${themes.followBTNDnmc}`}\r\n                            onClick={(e) => userIdTalkModeOn(e, i)}\r\n                          > Write message\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {writeMsgMode.servInfo[i]?.flag &&\r\n                      <WriterMode\r\n                        index={i}\r\n                        userEl={users[i]}\r\n                        themes={themes}\r\n                        sendMsg={palsFuncs.sendMessageToUserThunk}\r\n                        closer={writeMsgMode.servInfo[i].closer}\r\n                        delayFlag={delayFlag} />\r\n                    }\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className={cn(stl.moreUserUnits, themes.moreUserUnitsDnmc, delayFlag && stl.delay)}>\r\n                <button\r\n                  disabled={palsInfo.moreFriendsIsLoading || palsInfo.friendsCount === palsInfo.friendsList.length}\r\n                  className={cn(stl.moreUsersShower, palsInfo.errOnGettingFriends ? themes.followBTN_ERR_DNMC : themes.pagBTNDnmc)}\r\n                  onClick={() => { setFriendsListPage(++friendsListPage); getMyFriendsListener(friendsListPage) }}\r\n                >\r\n                  <div className={stl.followBTNContainer}>\r\n                    <div className={stl.followBTNText}>\r\n                      {palsInfo.errOnGettingFriends ?\r\n                        <>\r\n                          <p className={stl.onFollowingErrBTN}>{palsInfo.moreFriendsLoadErr} Err!</p>\r\n                          <p className={stl.tryAgainBTN}>Try again!</p>\r\n                        </>\r\n                        :\r\n                        palsInfo.friendsCount === palsInfo.friendsList.length ? 'All list loaded!' : \" Show more!\"} </div>\r\n                    <div className={stl.followBTNLoader}> {palsInfo.moreFriendsIsLoading && <img src={palsInfo.BTN_FLW_GIF} alt=\"Err\" />} </div>\r\n                  </div>\r\n                </button>\r\n\r\n              </div>\r\n            </>\r\n      }\r\n    </div>\r\n  </>\r\n};\r\n\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Friends } from './friends';\r\nimport stl from './../users/users.module.css';\r\nimport { getColorTheme, GetSmartFriendsReducer, getFriendsACs, getDialogsACs_compUsers } from \"../../../redux/selectors\";\r\nimport { InitialFriendsInfo_Type, FriendsACs } from \"../../../redux/friendsReducer\";\r\nimport { DialogActions_Type } from \"../../../redux/dialogsReducer\";\r\nimport { FriendsThemesBGR_Type } from \"../../../redux/backGroundSetter\";\r\n\r\n\r\nexport type PalsThemes_Type = {\r\n  friendsGeneralDnmc: string, generalHeaderDnmc: string, pagBTNDnmc: string, paginationSelectedDnmc: string, paginationDnmc: string, searchInputDnmc: string, userAvaDnmc: string,\r\n  followBTNDnmc: string, followBTN_ERR_DNMC: string, userNameDnmc: string, mapWrapperDnmc: string, userUnitDnmc: string, userWriteModeDnmc: string, moreUserUnitsDnmc: string\r\n}\r\n\r\nexport type FriendsActions_Type = {\r\n  getMyFriendsListThunk: (page: number) => void\r\n  followThunkToggler: (userId: number, isFollowed: boolean, error: string) => void\r\n  sendMessageToUserThunk: (userId: number, body: string, actionKey: string, userName: string) => void\r\n}\r\n\r\nlet FriendsFuncContainer = () => {\r\n\r\n  let colorTheme = useSelector(getColorTheme)\r\n  let palsInfo: InitialFriendsInfo_Type & FriendsThemesBGR_Type = useSelector(GetSmartFriendsReducer)\r\n\r\n  let dispatch = useDispatch();\r\n  let friendsACs: FriendsACs = useSelector(getFriendsACs)\r\n  let dialogsACs: DialogActions_Type = useSelector(getDialogsACs_compUsers)\r\n\r\n\r\n  let getMyFriendsListThunk = (page: number) => { dispatch(friendsACs.getMyFriendsListThunkAC(page)) };\r\n  let followThunkToggler = (userId: number, isFollowed: boolean, error: string) => { dispatch(friendsACs.followThunkTogglerAC(userId, isFollowed, error)) };\r\n  let sendMessageToUserThunk = (userId: number, body: string, actionKey: string, userName: string) => {\r\n    dispatch(dialogsACs.sendMessageToUserThunkAC(userId, body, actionKey, userName, -1))\r\n  }\r\n  let componentStateCleaner = () => { dispatch(friendsACs.unMountCleaner()) }\r\n  let palsFuncs: FriendsActions_Type = { getMyFriendsListThunk, followThunkToggler, sendMessageToUserThunk }\r\n\r\n  useEffect(() => {\r\n    getMyFriendsListThunk(1)\r\n    return () => { componentStateCleaner() }\r\n  }, []);\r\n\r\n\r\n  let [themes, setThemes] = useState<PalsThemes_Type>({\r\n    friendsGeneralDnmc: '', generalHeaderDnmc: '', pagBTNDnmc: '', paginationSelectedDnmc: '', paginationDnmc: '', searchInputDnmc: '', userAvaDnmc: '', followBTNDnmc: '', followBTN_ERR_DNMC: '', userNameDnmc: '', mapWrapperDnmc: '', userUnitDnmc: '', userWriteModeDnmc: '', moreUserUnitsDnmc: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    switch (colorTheme) {\r\n      case 'NIGHT':\r\n        return setThemes({\r\n          ...themes,\r\n          friendsGeneralDnmc: stl.friendsGeneralN,\r\n          generalHeaderDnmc: stl.generalHeaderN,\r\n          pagBTNDnmc: stl.pagBTN_N,\r\n          paginationSelectedDnmc: stl.paginationSelectedN,\r\n          paginationDnmc: stl.paginationN,\r\n          searchInputDnmc: stl.searchInputN,\r\n          userAvaDnmc: stl.userAvaN,\r\n          followBTNDnmc: stl.followBTN_N,\r\n          followBTN_ERR_DNMC: stl.followBTN_ERR_N,\r\n          userNameDnmc: stl.userNameN,\r\n          mapWrapperDnmc: stl.mapWrapperN,\r\n          userUnitDnmc: stl.userUnitN,\r\n          userWriteModeDnmc: stl.userWriteModeN,\r\n          moreUserUnitsDnmc: stl.moreUserUnitsN,\r\n        });\r\n      case 'MORNING':\r\n        return setThemes({\r\n          ...themes,\r\n          friendsGeneralDnmc: stl.friendsGeneralM,\r\n          generalHeaderDnmc: stl.generalHeaderM,\r\n          pagBTNDnmc: stl.pagBTN_M,\r\n          paginationSelectedDnmc: stl.paginationSelectedM,\r\n          paginationDnmc: stl.paginationM,\r\n          searchInputDnmc: stl.searchInputM,\r\n          userAvaDnmc: stl.userAvaM,\r\n          followBTNDnmc: stl.followBTN_M,\r\n          followBTN_ERR_DNMC: stl.followBTN_ERR_M,\r\n          userNameDnmc: stl.userNameM,\r\n          mapWrapperDnmc: stl.mapWrapperM,\r\n          userUnitDnmc: stl.userUnitM,\r\n          userWriteModeDnmc: stl.userWriteModeM,\r\n          moreUserUnitsDnmc: stl.moreUserUnitsM,\r\n        });\r\n      case 'DAY':\r\n        return setThemes({\r\n          ...themes,\r\n          friendsGeneralDnmc: stl.friendsGeneralD,\r\n          generalHeaderDnmc: stl.generalHeaderD,\r\n          pagBTNDnmc: stl.pagBTN_D,\r\n          paginationSelectedDnmc: stl.paginationSelectedD,\r\n          paginationDnmc: stl.paginationD,\r\n          searchInputDnmc: stl.searchInputD,\r\n          userAvaDnmc: stl.userAvaD,\r\n          followBTNDnmc: stl.followBTN_D,\r\n          followBTN_ERR_DNMC: stl.followBTN_ERR_D,\r\n          userNameDnmc: stl.userNameD,\r\n          mapWrapperDnmc: stl.mapWrapperD,\r\n          userUnitDnmc: stl.userUnitD,\r\n          userWriteModeDnmc: stl.userWriteModeD,\r\n          moreUserUnitsDnmc: stl.moreUserUnitsD\r\n        });\r\n      case 'EVENING':\r\n        return setThemes({\r\n          ...themes,\r\n          friendsGeneralDnmc: stl.friendsGeneralE,\r\n          generalHeaderDnmc: stl.generalHeaderE,\r\n          pagBTNDnmc: stl.pagBTN_E,\r\n          paginationSelectedDnmc: stl.paginationSelectedE,\r\n          paginationDnmc: stl.paginationE,\r\n          searchInputDnmc: stl.searchInputE,\r\n          userAvaDnmc: stl.userAvaE,\r\n          followBTNDnmc: stl.followBTN_E,\r\n          followBTN_ERR_DNMC: stl.followBTN_ERR_E,\r\n          userNameDnmc: stl.userNameE,\r\n          mapWrapperDnmc: stl.mapWrapperE,\r\n          userUnitDnmc: stl.userUnitE,\r\n          userWriteModeDnmc: stl.userWriteModeE,\r\n          moreUserUnitsDnmc: stl.moreUserUnitsE,\r\n        });\r\n    }\r\n  }, [colorTheme]);\r\n\r\n  return <Friends themes={themes} palsFuncs={palsFuncs} palsInfo={palsInfo} />\r\n}\r\n\r\nexport default FriendsFuncContainer;\r\n\r\n\r\n"],"sourceRoot":""}